import React from \"react\";\nimport { formatCurrency } from \"../utils/paymentHelpers\";\nimport { FaCheck, FaCalendarAlt, FaCrown, FaStar } from \"react-icons/fa\";\n\n/**\n * Subscription Selection Component\n * Allows users to select from available subscription plans\n */\nconst SubscriptionSelection = ({\n  subscriptions = [],\n  selectedSubscription,\n  onSubscriptionSelection,\n  currency = \"USD\",\n}) => {\n  if (!subscriptions || subscriptions.length === 0) {\n    return (\n      <div className=\"mb-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n        <p className=\"text-yellow-800 text-sm\">\n          No subscription plans available for selection.\n        </p>\n      </div>\n    );\n  }\n\n  // Helper function to get billing period display\n  const getBillingPeriodDisplay = (subscription) => {\n    const { billingPeriod, billingFrequency = 1 } = subscription;\n    \n    if (billingFrequency === 1) {\n      switch (billingPeriod) {\n        case \"month\":\n          return \"Monthly\";\n        case \"year\":\n          return \"Yearly\";\n        case \"week\":\n          return \"Weekly\";\n        case \"day\":\n          return \"Daily\";\n        default:\n          return \"Per billing cycle\";\n      }\n    } else {\n      switch (billingPeriod) {\n        case \"month\":\n          return `Every ${billingFrequency} months`;\n        case \"year\":\n          return `Every ${billingFrequency} years`;\n        case \"week\":\n          return `Every ${billingFrequency} weeks`;\n        case \"day\":\n          return `Every ${billingFrequency} days`;\n        default:\n          return `Every ${billingFrequency} billing cycles`;\n      }\n    }\n  };\n\n  // Helper function to get plan icon\n  const getPlanIcon = (subscription) => {\n    if (subscription.isPopular || subscription.recommended) {\n      return <FaStar className=\"text-yellow-500\" />;\n    }\n    if (subscription.isPremium) {\n      return <FaCrown className=\"text-purple-500\" />;\n    }\n    return <FaCalendarAlt className=\"text-blue-600\" />;\n  };\n\n  return (\n    <div className=\"mb-6\">\n      <h4 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center gap-2\">\n        <FaCalendarAlt className=\"text-blue-600\" />\n        Choose Your Plan\n      </h4>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n        {subscriptions.map((subscription) => {\n          const isSelected = selectedSubscription?.id === subscription.id;\n          const billingDisplay = getBillingPeriodDisplay(subscription);\n          \n          return (\n            <div\n              key={subscription.id}\n              className={`relative border-2 rounded-lg transition-all duration-200 ${\n                isSelected\n                  ? \"border-blue-500 bg-blue-50 shadow-md\"\n                  : \"border-gray-200 hover:border-gray-300 hover:shadow-sm\"\n              } ${\n                subscription.isPopular || subscription.recommended\n                  ? \"ring-2 ring-yellow-400 ring-opacity-50\"\n                  : \"\"\n              }`}\n            >\n              {/* Popular/Recommended badge */}\n              {(subscription.isPopular || subscription.recommended) && (\n                <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                  <div className=\"bg-yellow-400 text-yellow-900 px-3 py-1 rounded-full text-xs font-medium\">\n                    {subscription.isPopular ? \"Most Popular\" : \"Recommended\"}\n                  </div>\n                </div>\n              )}\n              \n              <button\n                onClick={() => onSubscriptionSelection(subscription)}\n                className=\"w-full p-6 text-left\"\n              >\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div className=\"flex items-center gap-2\">\n                    {getPlanIcon(subscription)}\n                    <h5 className=\"font-medium text-gray-900\">\n                      {subscription.name}\n                    </h5>\n                  </div>\n                  {isSelected && (\n                    <div className=\"w-5 h-5 bg-blue-500 rounded-full flex items-center justify-center flex-shrink-0\">\n                      <FaCheck className=\"w-3 h-3 text-white\" />\n                    </div>\n                  )}\n                </div>\n                \n                {subscription.description && (\n                  <p className=\"text-gray-600 text-sm mb-4\">\n                    {subscription.description}\n                  </p>\n                )}\n                \n                {/* Pricing */}\n                <div className=\"mb-4\">\n                  <div className=\"flex items-baseline gap-2\">\n                    <span className=\"text-2xl font-bold text-gray-900\">\n                      {formatCurrency(subscription.price, currency)}\n                    </span>\n                    <span className=\"text-gray-600 text-sm\">\n                      / {billingDisplay.toLowerCase()}\n                    </span>\n                  </div>\n                  \n                  {subscription.originalPrice && subscription.originalPrice > subscription.price && (\n                    <div className=\"flex items-center gap-2 mt-1\">\n                      <span className=\"text-sm text-gray-500 line-through\">\n                        {formatCurrency(subscription.originalPrice, currency)}\n                      </span>\n                      <span className=\"text-sm text-green-600 font-medium\">\n                        Save {Math.round((1 - subscription.price / subscription.originalPrice) * 100)}%\n                      </span>\n                    </div>\n                  )}\n                </div>\n                \n                {/* Features */}\n                {subscription.features && subscription.features.length > 0 && (\n                  <div className=\"space-y-2\">\n                    {subscription.features.map((feature, index) => (\n                      <div key={index} className=\"flex items-center gap-2\">\n                        <FaCheck className=\"w-3 h-3 text-green-500 flex-shrink-0\" />\n                        <span className=\"text-sm text-gray-700\">{feature}</span>\n                      </div>\n                    ))}\n                  </div>\n                )}\n                \n                {/* Trial period */}\n                {subscription.trialDays && subscription.trialDays > 0 && (\n                  <div className=\"mt-4 p-2 bg-green-50 border border-green-200 rounded\">\n                    <p className=\"text-green-800 text-xs font-medium\">\n                      ðŸŽ‰ {subscription.trialDays}-day free trial included\n                    </p>\n                  </div>\n                )}\n                \n                {/* Setup fee */}\n                {subscription.setupFee && subscription.setupFee > 0 && (\n                  <div className=\"mt-2\">\n                    <p className=\"text-gray-600 text-xs\">\n                      One-time setup fee: {formatCurrency(subscription.setupFee, currency)}\n                    </p>\n                  </div>\n                )}\n              </button>\n            </div>\n          );\n        })}\n      </div>\n      \n      {selectedSubscription && (\n        <div className=\"mt-4 p-4 bg-green-50 border border-green-200 rounded-lg\">\n          <div className=\"flex items-center gap-2 mb-2\">\n            <FaCheck className=\"text-green-600\" />\n            <span className=\"text-green-800 font-medium\">\n              Selected Plan: {selectedSubscription.name}\n            </span>\n          </div>\n          <div className=\"text-green-700 text-sm\">\n            <div className=\"flex justify-between items-center\">\n              <span>Billing:</span>\n              <span className=\"font-medium\">\n                {formatCurrency(selectedSubscription.price, currency)} / {getBillingPeriodDisplay(selectedSubscription).toLowerCase()}\n              </span>\n            </div>\n            {selectedSubscription.trialDays && selectedSubscription.trialDays > 0 && (\n              <div className=\"flex justify-between items-center mt-1\">\n                <span>Free trial:</span>\n                <span className=\"font-medium\">{selectedSubscription.trialDays} days</span>\n              </div>\n            )}\n            {selectedSubscription.setupFee && selectedSubscription.setupFee > 0 && (\n              <div className=\"flex justify-between items-center mt-1\">\n                <span>Setup fee:</span>\n                <span className=\"font-medium\">{formatCurrency(selectedSubscription.setupFee, currency)}</span>\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SubscriptionSelection;