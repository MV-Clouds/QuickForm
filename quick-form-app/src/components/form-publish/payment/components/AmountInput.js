import React, { useState, useEffect } from \"react\";\nimport { formatCurrency } from \"../utils/paymentHelpers\";\nimport { FaDollarSign, FaHeart, FaExclamationTriangle } from \"react-icons/fa\";\n\n/**\n * Amount Input Component\n * Allows users to enter custom payment amounts\n */\nconst AmountInput = ({\n  paymentAmount,\n  amountError,\n  onAmountChange,\n  amountConfig = {},\n  paymentType = \"custom_amount\",\n}) => {\n  const [inputValue, setInputValue] = useState(paymentAmount || \"\");\n  const [isFocused, setIsFocused] = useState(false);\n  \n  const {\n    currency = \"USD\",\n    minAmount,\n    maxAmount,\n    suggestedAmounts = [],\n    placeholder,\n    label,\n    description,\n  } = amountConfig;\n\n  // Update input value when paymentAmount changes externally\n  useEffect(() => {\n    if (paymentAmount !== inputValue) {\n      setInputValue(paymentAmount || \"\");\n    }\n  }, [paymentAmount]);\n\n  // Handle input change\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n    \n    // Allow only numbers and decimal point\n    if (value === \"\" || /^\\d*\\.?\\d*$/.test(value)) {\n      setInputValue(value);\n      onAmountChange(value);\n    }\n  };\n\n  // Handle suggested amount selection\n  const handleSuggestedAmountClick = (amount) => {\n    const amountStr = amount.toString();\n    setInputValue(amountStr);\n    onAmountChange(amountStr);\n  };\n\n  // Get appropriate icon based on payment type\n  const getIcon = () => {\n    switch (paymentType) {\n      case \"donation\":\n        return <FaHeart className=\"text-red-500\" />;\n      default:\n        return <FaDollarSign className=\"text-green-600\" />;\n    }\n  };\n\n  // Get appropriate labels based on payment type\n  const getLabels = () => {\n    switch (paymentType) {\n      case \"donation\":\n        return {\n          title: label || \"Donation Amount\",\n          placeholder: placeholder || \"Enter donation amount\",\n          description: description || \"Enter the amount you'd like to donate\",\n        };\n      default:\n        return {\n          title: label || \"Payment Amount\",\n          placeholder: placeholder || \"Enter amount\",\n          description: description || \"Enter the payment amount\",\n        };\n    }\n  };\n\n  const labels = getLabels();\n\n  return (\n    <div className=\"mb-6\">\n      <h4 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center gap-2\">\n        {getIcon()}\n        {labels.title}\n      </h4>\n      \n      {labels.description && (\n        <p className=\"text-gray-600 text-sm mb-4\">\n          {labels.description}\n        </p>\n      )}\n      \n      {/* Suggested amounts */}\n      {suggestedAmounts && suggestedAmounts.length > 0 && (\n        <div className=\"mb-4\">\n          <p className=\"text-sm text-gray-700 mb-2\">\n            {paymentType === \"donation\" ? \"Quick donation amounts:\" : \"Suggested amounts:\"}\n          </p>\n          <div className=\"flex flex-wrap gap-2\">\n            {suggestedAmounts.map((amount, index) => (\n              <button\n                key={index}\n                onClick={() => handleSuggestedAmountClick(amount)}\n                className={`px-4 py-2 border rounded-lg text-sm font-medium transition-all duration-200 ${\n                  parseFloat(inputValue) === amount\n                    ? \"border-blue-500 bg-blue-50 text-blue-700\"\n                    : \"border-gray-300 text-gray-700 hover:border-gray-400 hover:bg-gray-50\"\n                }`}\n              >\n                {formatCurrency(amount, currency)}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n      \n      {/* Amount input */}\n      <div className=\"relative\">\n        <div className=\"relative\">\n          <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\n            <span className=\"text-gray-500 text-lg font-medium\">\n              {currency === \"USD\" ? \"$\" : currency}\n            </span>\n          </div>\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleInputChange}\n            onFocus={() => setIsFocused(true)}\n            onBlur={() => setIsFocused(false)}\n            placeholder={labels.placeholder}\n            className={`block w-full pl-8 pr-4 py-3 text-lg border rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200 ${\n              amountError\n                ? \"border-red-300 bg-red-50\"\n                : isFocused\n                ? \"border-blue-300 bg-blue-50\"\n                : \"border-gray-300 bg-white\"\n            }`}\n          />\n        </div>\n        \n        {/* Amount validation feedback */}\n        {amountError && (\n          <div className=\"mt-2 flex items-center gap-2 text-red-600\">\n            <FaExclamationTriangle className=\"w-4 h-4\" />\n            <span className=\"text-sm\">{amountError}</span>\n          </div>\n        )}\n        \n        {/* Amount constraints display */}\n        {(minAmount || maxAmount) && !amountError && (\n          <div className=\"mt-2 text-sm text-gray-600\">\n            {minAmount && maxAmount ? (\n              <span>\n                Amount must be between {formatCurrency(minAmount, currency)} and {formatCurrency(maxAmount, currency)}\n              </span>\n            ) : minAmount ? (\n              <span>\n                Minimum amount: {formatCurrency(minAmount, currency)}\n              </span>\n            ) : (\n              <span>\n                Maximum amount: {formatCurrency(maxAmount, currency)}\n              </span>\n            )}\n          </div>\n        )}\n        \n        {/* Live amount preview */}\n        {inputValue && !amountError && parseFloat(inputValue) > 0 && (\n          <div className=\"mt-3 p-3 bg-green-50 border border-green-200 rounded-lg\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-green-800 font-medium\">\n                {paymentType === \"donation\" ? \"Donation Amount:\" : \"Payment Amount:\"}\n              </span>\n              <span className=\"text-green-900 text-lg font-bold\">\n                {formatCurrency(parseFloat(inputValue), currency)}\n              </span>\n            </div>\n          </div>\n        )}\n      </div>\n      \n      {/* Additional payment type specific information */}\n      {paymentType === \"donation\" && (\n        <div className=\"mt-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n          <p className=\"text-blue-800 text-sm\">\n            üíù Thank you for your generous donation! Every contribution makes a difference.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AmountInput;