import React from \"react\";\nimport { PayPalButtons } from \"@paypal/react-paypal-js\";\nimport PayPalCardPayment from \"./PayPalCardPayment\";\nimport GooglePayIntegration from \"./GooglePayIntegration\";\nimport PayPalDonateButton from \"./PayPalDonateButton\";\nimport ProductSelection from \"./ProductSelection\";\nimport SubscriptionSelection from \"./SubscriptionSelection\";\nimport AmountInput from \"./AmountInput\";\nimport { \n  formatCurrency, \n  getPaymentButtonLabel, \n  getPaymentButtonColor \n} from \"../utils/paymentHelpers\";\n\n/**\n * Payment Content Component\n * Renders the appropriate payment interface based on selected payment method\n */\nconst PaymentContent = ({\n  paymentMethod,\n  paymentType,\n  subFields,\n  paymentAmount,\n  amountError,\n  selectedProduct,\n  selectedSubscription,\n  onAmountChange,\n  onProductSelection,\n  onSubscriptionSelection,\n  createOrder,\n  onApprove,\n  onCancel,\n  onError,\n  isPaymentButtonReady,\n  isProcessing,\n  merchantCredentials,\n}) => {\n  const currency = subFields.amount?.currency || \"USD\";\n\n  // Render payment type specific content (product/subscription/amount selection)\n  const renderPaymentTypeContent = () => {\n    switch (paymentType) {\n      case \"product_wise\":\n        return (\n          <ProductSelection\n            products={subFields.products || []}\n            selectedProduct={selectedProduct}\n            onProductSelection={onProductSelection}\n            currency={currency}\n          />\n        );\n      \n      case \"subscription\":\n        return (\n          <SubscriptionSelection\n            subscriptions={subFields.subscriptions || []}\n            selectedSubscription={selectedSubscription}\n            onSubscriptionSelection={onSubscriptionSelection}\n            currency={currency}\n          />\n        );\n      \n      case \"custom_amount\":\n      case \"donation\":\n        return (\n          <AmountInput\n            paymentAmount={paymentAmount}\n            amountError={amountError}\n            onAmountChange={onAmountChange}\n            amountConfig={subFields.amount || {}}\n            paymentType={paymentType}\n          />\n        );\n      \n      case \"donation_button\":\n        return (\n          <PayPalDonateButton\n            donationButtonId={subFields.donationButtonId}\n            onPaymentSuccess={onApprove}\n            onPaymentError={onError}\n          />\n        );\n      \n      default:\n        return null;\n    }\n  };\n\n  // Render payment total summary\n  const renderPaymentSummary = () => {\n    if (paymentType === \"donation_button\" || !paymentAmount) {\n      return null;\n    }\n\n    return (\n      <div className=\"mb-6\">\n        <div className=\"bg-gray-50 rounded-lg p-4 border\">\n          <div className=\"flex justify-between items-center\">\n            <span className=\"font-medium text-gray-900\">Total Amount:</span>\n            <span className=\"text-xl font-bold text-gray-900\">\n              {formatCurrency(paymentAmount, currency)}\n            </span>\n          </div>\n          {selectedProduct && (\n            <div className=\"mt-2 text-sm text-gray-600\">\n              Product: {selectedProduct.name}\n            </div>\n          )}\n          {selectedSubscription && (\n            <div className=\"mt-2 text-sm text-gray-600\">\n              Subscription: {selectedSubscription.name}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  // Render payment method specific interface\n  const renderPaymentInterface = () => {\n    if (paymentType === \"donation_button\") {\n      return null; // Donation button handles its own interface\n    }\n\n    if (!isPaymentButtonReady) {\n      return (\n        <div className=\"mt-6 p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\n          <p className=\"text-yellow-800 text-sm\">\n            {!paymentAmount ? \"Please select a product or enter an amount to continue.\" :\n             !selectedProduct && paymentType === \"product_wise\" ? \"Please select a product to continue.\" :\n             !selectedSubscription && paymentType === \"subscription\" ? \"Please select a subscription to continue.\" :\n             \"Please complete the form to enable payment.\"}\n          </p>\n        </div>\n      );\n    }\n\n    switch (paymentMethod) {\n      case \"paypal\":\n        return (\n          <div className=\"mt-6\">\n            <PayPalButtons\n              createOrder={createOrder}\n              onApprove={onApprove}\n              onCancel={onCancel}\n              onError={onError}\n              disabled={isProcessing}\n              style={{\n                layout: \"vertical\",\n                color: getPaymentButtonColor(paymentType),\n                shape: \"rect\",\n                label: getPaymentButtonLabel(paymentType),\n                height: 50,\n              }}\n            />\n          </div>\n        );\n      \n      case \"card\":\n        return (\n          <div className=\"mt-6\">\n            <PayPalCardPayment\n              amount={paymentAmount}\n              currency={currency}\n              onPaymentSuccess={onApprove}\n              onPaymentError={onError}\n              disabled={isProcessing}\n              merchantCredentials={merchantCredentials}\n            />\n          </div>\n        );\n      \n      case \"googlepay\":\n        return (\n          <div className=\"mt-6\">\n            <GooglePayIntegration\n              amount={paymentAmount}\n              currency={currency}\n              onPaymentSuccess={onApprove}\n              onPaymentError={onError}\n              disabled={isProcessing}\n              merchantCredentials={merchantCredentials}\n            />\n          </div>\n        );\n      \n      default:\n        return (\n          <div className=\"mt-6 p-4 bg-red-50 border border-red-200 rounded-lg\">\n            <p className=\"text-red-800 text-sm\">\n              Unsupported payment method: {paymentMethod}\n            </p>\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"payment-content\">\n      {/* Payment type specific content */}\n      {renderPaymentTypeContent()}\n      \n      {/* Payment summary */}\n      {renderPaymentSummary()}\n      \n      {/* Payment interface */}\n      {renderPaymentInterface()}\n    </div>\n  );\n};\n\nexport default PaymentContent;