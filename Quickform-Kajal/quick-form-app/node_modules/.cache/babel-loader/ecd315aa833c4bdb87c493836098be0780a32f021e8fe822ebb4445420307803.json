{"ast":null,"code":"'use client';\n\nfunction _createForOfIteratorHelperLoose(r, e) {\n  var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (t) return (t = t.call(r)).next.bind(t);\n  if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) {\n    t && (r = t);\n    var o = 0;\n    return function () {\n      return o >= r.length ? {\n        done: !0\n      } : {\n        done: !1,\n        value: r[o++]\n      };\n    };\n  }\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nimport on from 'dom-lib/on';\nimport { useCallback, useRef, useState } from 'react';\nimport AutoScroller from \"./AutoScroller.js\";\nimport { closestNode, getEdgeOffset, getScrollingParent, isContainInteractiveElement, setInlineStyles, setTransitionDuration, setTranslate3d } from \"./utils.js\";\nimport { useIsMounted } from \"../../internals/hooks/index.js\";\nimport useManager from \"./useManager.js\";\nvar helperElementClass = 'rs-list-item-helper';\nvar holderElementClass = 'rs-list-item-holder';\nvar useSortHelper = function useSortHelper(config) {\n  var autoScroll = config.autoScroll,\n    pressDelay = config.pressDelay,\n    transitionDuration = config.transitionDuration,\n    onSort = config.onSort,\n    onSortEnd = config.onSortEnd,\n    onSortMove = config.onSortMove,\n    onSortStart = config.onSortStart;\n  var _useState = useState(false),\n    sorting = _useState[0],\n    setSorting = _useState[1];\n  var containerRef = useRef(null);\n  var pressTimer = useRef();\n  var _useManager = useManager(),\n    listItemRegister = _useManager.listItemRegister,\n    getManagedItem = _useManager.getManagedItem,\n    getOrderedItems = _useManager.getOrderedItems;\n  var isMounted = useIsMounted();\n\n  /**\n   * start dragging\n   * */\n  var handlePress = useCallback(function (event, _targetNode, curManagedItem) {\n    var _curManagedItem$info$, _curManagedItem$info$2, _activeNodeHelper;\n    if (!isMounted()) return;\n    // data\n    var containerElement = containerRef.current;\n    var activeNode = curManagedItem.node;\n    var activeNodeOldIndex = (_curManagedItem$info$ = curManagedItem.info.index) !== null && _curManagedItem$info$ !== void 0 ? _curManagedItem$info$ : 0;\n    var activeNodeNextIndex = (_curManagedItem$info$2 = curManagedItem.info.index) !== null && _curManagedItem$info$2 !== void 0 ? _curManagedItem$info$2 : 0;\n    var activeNodeHolderTranslate = {\n      x: 0,\n      y: 0\n    };\n    var animatedNodesOffset = []; // all list item offset\n\n    // Get initial position from event\n    var isTouchEvent = 'touches' in event;\n    var initialPosition = {\n      pageX: isTouchEvent ? event.touches[0].pageX : event.pageX,\n      pageY: isTouchEvent ? event.touches[0].pageY : event.pageY\n    };\n\n    // init scroller\n    var scrollContainer = getScrollingParent(containerElement) || containerElement;\n    var initScroll = {\n      x: scrollContainer.scrollLeft,\n      y: scrollContainer.scrollTop\n    };\n    var autoScroller = new AutoScroller(scrollContainer, function (offset) {\n      activeNodeHolderTranslate.x += offset.left;\n      activeNodeHolderTranslate.y += offset.top;\n    });\n    var activeNodeBoundingClientRect = activeNode.getBoundingClientRect();\n    var activeNodeOffsetEdge = getEdgeOffset(activeNode, containerElement);\n    var activeNodeStyle = getComputedStyle(activeNode);\n    var activeNodeHelper = activeNode.cloneNode(true);\n    (_activeNodeHelper = activeNodeHelper) === null || _activeNodeHelper === void 0 || _activeNodeHelper.classList.add(helperElementClass);\n    setInlineStyles(activeNodeHelper, {\n      position: 'fixed',\n      width: activeNodeBoundingClientRect.width + \"px\",\n      height: activeNodeBoundingClientRect.height + \"px\",\n      left: activeNodeBoundingClientRect.left - parseFloat(activeNodeStyle.marginLeft) + \"px\",\n      top: activeNodeBoundingClientRect.top - parseFloat(activeNodeStyle.marginTop) + \"px\"\n    });\n    activeNode.classList.add(holderElementClass);\n    document.body.appendChild(activeNodeHelper);\n    var getContainerScrollDelta = function getContainerScrollDelta() {\n      return {\n        left: scrollContainer.scrollLeft - initScroll.x,\n        top: scrollContainer.scrollTop - initScroll.y\n      };\n    };\n    var getHolderTranslate = function getHolderTranslate() {\n      return animatedNodesOffset.reduce(function (acc, item) {\n        return {\n          x: acc.x + item.x,\n          y: acc.y + item.y\n        };\n      }, {\n        x: 0,\n        y: 0\n      });\n    };\n\n    // Common handler for both mouse and touch move events\n    var handleSortMove = function handleSortMove(moveEvent) {\n      // Prevent default to stop page scrolling during touch drag\n      if ('touches' in moveEvent) {\n        moveEvent.preventDefault();\n      }\n\n      // Get current position from event\n      var isTouchMoveEvent = 'touches' in moveEvent;\n      var currentPosition = {\n        pageX: isTouchMoveEvent ? moveEvent.touches[0].pageX : moveEvent.pageX,\n        pageY: isTouchMoveEvent ? moveEvent.touches[0].pageY : moveEvent.pageY\n      };\n\n      // Update helper position\n      var offset = {\n        x: currentPosition.pageX,\n        y: currentPosition.pageY\n      };\n      var containerScrollDelta = getContainerScrollDelta();\n      var containerBoundingRect = scrollContainer.getBoundingClientRect();\n      activeNodeHolderTranslate = {\n        x: offset.x - initialPosition.pageX,\n        y: offset.y - initialPosition.pageY\n      };\n      if (activeNodeHelper) {\n        setTranslate3d(activeNodeHelper, activeNodeHolderTranslate);\n      }\n\n      // animate\n      activeNodeNextIndex = -1;\n      var listItemManagerRefs = getOrderedItems(curManagedItem.info.collection);\n      var aTop = activeNodeOffsetEdge.top || 0;\n      var cTop = containerScrollDelta.top || 0;\n      var sortingOffsetY = aTop + activeNodeHolderTranslate.y + cTop;\n      for (var i = 0, len = listItemManagerRefs.length; i < len; i++) {\n        var _listItemManagerRefs$;\n        var currentNode = listItemManagerRefs[i].node;\n        var currentNodeIndex = (_listItemManagerRefs$ = listItemManagerRefs[i].info.index) !== null && _listItemManagerRefs$ !== void 0 ? _listItemManagerRefs$ : 0;\n        var offsetY = activeNodeBoundingClientRect.height > currentNode.offsetHeight ? currentNode.offsetHeight / 2 : activeNodeBoundingClientRect.height / 2;\n        var translate = {\n          x: 0,\n          y: 0\n        };\n\n        // If we haven't cached the node's offsetTop / offsetLeft value\n        var curEdgeOffset = listItemManagerRefs[i].edgeOffset || getEdgeOffset(currentNode, containerElement);\n        listItemManagerRefs[i].edgeOffset = curEdgeOffset;\n\n        // Get a reference to the next node\n        var prvNode = i > 0 && listItemManagerRefs[i - 1];\n        var nextNode = i < len - 1 && listItemManagerRefs[i + 1];\n\n        // Also cache the node's edge offset if needed.\n        if (prvNode && !prvNode.edgeOffset) {\n          prvNode.edgeOffset = getEdgeOffset(prvNode.node, containerElement);\n        }\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = getEdgeOffset(nextNode.node, containerElement);\n        }\n\n        // If the node is the one we're currently animating, skip it\n        if (currentNodeIndex === activeNodeOldIndex) {\n          continue;\n        }\n        var curEdgeOffsetTop = curEdgeOffset.top || 0;\n        if (prvNode && currentNodeIndex > activeNodeOldIndex && sortingOffsetY + offsetY >= curEdgeOffsetTop) {\n          var _prvNode$edgeOffset;\n          var yOffset = (((_prvNode$edgeOffset = prvNode.edgeOffset) === null || _prvNode$edgeOffset === void 0 ? void 0 : _prvNode$edgeOffset.top) || 0) - curEdgeOffsetTop;\n          translate.y = yOffset;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -yOffset\n          };\n          activeNodeNextIndex = currentNodeIndex;\n        } else if (nextNode && currentNodeIndex < activeNodeOldIndex && sortingOffsetY <= curEdgeOffsetTop + offsetY) {\n          var _nextNode$edgeOffset;\n          var _yOffset = (((_nextNode$edgeOffset = nextNode.edgeOffset) === null || _nextNode$edgeOffset === void 0 ? void 0 : _nextNode$edgeOffset.top) || 0) - curEdgeOffsetTop;\n          translate.y = _yOffset;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -_yOffset\n          };\n          if (activeNodeNextIndex === -1) {\n            activeNodeNextIndex = currentNodeIndex;\n          }\n        } else {\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: 0\n          };\n        }\n        setTransitionDuration(currentNode, transitionDuration);\n        setTranslate3d(currentNode, translate);\n\n        // translate holder\n        setTranslate3d(activeNode, getHolderTranslate());\n      }\n      if (activeNodeNextIndex === -1) {\n        activeNodeNextIndex = activeNodeOldIndex;\n      }\n\n      // auto scroll\n      if (autoScroll) {\n        autoScroller.update({\n          width: activeNodeBoundingClientRect.width,\n          height: activeNodeBoundingClientRect.height,\n          translate: activeNodeHolderTranslate,\n          maxTranslate: {\n            x: 0,\n            y: containerBoundingRect.top + containerBoundingRect.height - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          },\n          minTranslate: {\n            x: 0,\n            y: containerBoundingRect.top - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          }\n        });\n      }\n      onSortMove === null || onSortMove === void 0 || onSortMove({\n        collection: curManagedItem.info.collection,\n        node: activeNode,\n        oldIndex: activeNodeOldIndex,\n        newIndex: activeNodeNextIndex\n      }, moveEvent);\n    };\n\n    // Common handler for both mouse and touch end events\n    var handleSortEnd = function handleSortEnd(endEvent) {\n      var _sortTouchMoveListene, _sortTouchEndListener;\n      // Remove the event listeners\n      sortMouseMoveListener.off();\n      sortMouseEndListener.off();\n      (_sortTouchMoveListene = sortTouchMoveListener) === null || _sortTouchMoveListene === void 0 || _sortTouchMoveListene.off();\n      (_sortTouchEndListener = sortTouchEndListener) === null || _sortTouchEndListener === void 0 || _sortTouchEndListener.off();\n\n      // Enable page scrolling again\n      if (document.body.style.overflow === 'hidden') {\n        document.body.style.overflow = '';\n      }\n      var holderTranslate = getHolderTranslate();\n      var containerScrollDelta = getContainerScrollDelta();\n      if (activeNodeHelper) {\n        setTranslate3d(activeNodeHelper, {\n          x: holderTranslate.x - (containerScrollDelta.left || 0),\n          y: holderTranslate.y - (containerScrollDelta.top || 0)\n        });\n        setTransitionDuration(activeNodeHelper, transitionDuration);\n      }\n\n      // wait for animation\n      setTimeout(function () {\n        var _activeNodeHelper2;\n        if (!isMounted()) return;\n        // Remove the helper from the DOM\n        (_activeNodeHelper2 = activeNodeHelper) === null || _activeNodeHelper2 === void 0 || (_activeNodeHelper2 = _activeNodeHelper2.parentNode) === null || _activeNodeHelper2 === void 0 || _activeNodeHelper2.removeChild(activeNodeHelper);\n        activeNodeHelper = null;\n\n        // Remove redundant styles\n        activeNode.classList.remove(holderElementClass);\n        setTranslate3d(activeNode, null);\n        animatedNodesOffset = [];\n        for (var _iterator = _createForOfIteratorHelperLoose(getOrderedItems(curManagedItem.info.collection)), _step; !(_step = _iterator()).done;) {\n          var item = _step.value;\n          // Clear the cached offsetTop / offsetLeft value\n          item.edgeOffset = null;\n\n          // Remove the transforms / transitions\n          var el = item.node;\n          setTranslate3d(el, null);\n          setTransitionDuration(el, null);\n        }\n\n        // Stop autoScroll\n        autoScroller.clear();\n\n        // Update manager state\n        setSorting(false);\n\n        // callbacks\n        var callbackPayload = {\n          collection: curManagedItem.info.collection,\n          node: curManagedItem.node,\n          newIndex: activeNodeNextIndex,\n          oldIndex: activeNodeOldIndex\n        };\n        onSortEnd === null || onSortEnd === void 0 || onSortEnd(callbackPayload, endEvent);\n        onSort === null || onSort === void 0 || onSort(callbackPayload, endEvent);\n      }, transitionDuration);\n    };\n\n    // Set up mouse event listeners\n    var sortMouseMoveListener = on(window, 'mousemove', handleSortMove, {\n      passive: false\n    });\n    var sortMouseEndListener = on(window, 'mouseup', handleSortEnd, {\n      passive: false\n    });\n\n    // Set up touch event listeners\n    var sortTouchMoveListener;\n    var sortTouchEndListener;\n    if (isTouchEvent) {\n      // Disable page scrolling during touch drag\n      document.body.style.overflow = 'hidden';\n      sortTouchMoveListener = on(window, 'touchmove', handleSortMove, {\n        passive: false\n      } // Important: passive: false allows preventDefault() to work\n      );\n      sortTouchEndListener = on(window, 'touchend', handleSortEnd, {\n        passive: false\n      });\n    }\n    setSorting(true);\n    // start callback\n    onSortStart === null || onSortStart === void 0 || onSortStart({\n      collection: curManagedItem.info.collection,\n      node: activeNode,\n      oldIndex: activeNodeOldIndex,\n      newIndex: activeNodeNextIndex\n    }, event);\n  }, [autoScroll, getOrderedItems, isMounted, onSort, onSortEnd, onSortMove, onSortStart, transitionDuration]);\n\n  /**\n   * Determine whether to start dragging\n   * */\n  var handleStart = useCallback(function (mouseDownEvent) {\n    var triggeredNode = mouseDownEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n    if (\n    // is not secondary button pressed\n    mouseDownEvent.button !== 2 &&\n    // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled &&\n    // is not sorting\n    !sorting &&\n    // is valid node\n    targetNode instanceof HTMLElement &&\n    // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      mouseDownEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, mouseDownEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n\n  /**\n   * Handle touch start for mobile devices\n   */\n  var handleTouchStart = useCallback(function (touchStartEvent) {\n    var triggeredNode = touchStartEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n    if (\n    // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled &&\n    // is not sorting\n    !sorting &&\n    // is valid node\n    targetNode instanceof HTMLElement &&\n    // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      // Prevent scrolling while sorting\n      touchStartEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, touchStartEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n\n  /**\n   * Clear timer after drag\n   * */\n  var handleEnd = useCallback(function () {\n    clearTimeout(pressTimer.current);\n\n    // Ensure page scrolling is re-enabled\n    if (document.body.style.overflow === 'hidden') {\n      document.body.style.overflow = '';\n    }\n  }, []);\n\n  /**\n   * Clear timer after touch end\n   */\n  var handleTouchEnd = useCallback(function () {\n    clearTimeout(pressTimer.current);\n\n    // Ensure page scrolling is re-enabled\n    if (document.body.style.overflow === 'hidden') {\n      document.body.style.overflow = '';\n    }\n  }, []);\n  return {\n    handleStart: handleStart,\n    handleEnd: handleEnd,\n    handleTouchStart: handleTouchStart,\n    handleTouchEnd: handleTouchEnd,\n    containerRef: containerRef,\n    sorting: sorting,\n    register: listItemRegister\n  };\n};\nexport default useSortHelper;","map":{"version":3,"names":["_createForOfIteratorHelperLoose","r","e","t","Symbol","iterator","call","next","bind","Array","isArray","_unsupportedIterableToArray","length","o","done","value","TypeError","a","_arrayLikeToArray","toString","slice","constructor","name","from","test","n","on","useCallback","useRef","useState","AutoScroller","closestNode","getEdgeOffset","getScrollingParent","isContainInteractiveElement","setInlineStyles","setTransitionDuration","setTranslate3d","useIsMounted","useManager","helperElementClass","holderElementClass","useSortHelper","config","autoScroll","pressDelay","transitionDuration","onSort","onSortEnd","onSortMove","onSortStart","_useState","sorting","setSorting","containerRef","pressTimer","_useManager","listItemRegister","getManagedItem","getOrderedItems","isMounted","handlePress","event","_targetNode","curManagedItem","_curManagedItem$info$","_curManagedItem$info$2","_activeNodeHelper","containerElement","current","activeNode","node","activeNodeOldIndex","info","index","activeNodeNextIndex","activeNodeHolderTranslate","x","y","animatedNodesOffset","isTouchEvent","initialPosition","pageX","touches","pageY","scrollContainer","initScroll","scrollLeft","scrollTop","autoScroller","offset","left","top","activeNodeBoundingClientRect","getBoundingClientRect","activeNodeOffsetEdge","activeNodeStyle","getComputedStyle","activeNodeHelper","cloneNode","classList","add","position","width","height","parseFloat","marginLeft","marginTop","document","body","appendChild","getContainerScrollDelta","getHolderTranslate","reduce","acc","item","handleSortMove","moveEvent","preventDefault","isTouchMoveEvent","currentPosition","containerScrollDelta","containerBoundingRect","listItemManagerRefs","collection","aTop","cTop","sortingOffsetY","i","len","_listItemManagerRefs$","currentNode","currentNodeIndex","offsetY","offsetHeight","translate","curEdgeOffset","edgeOffset","prvNode","nextNode","curEdgeOffsetTop","_prvNode$edgeOffset","yOffset","_nextNode$edgeOffset","_yOffset","update","maxTranslate","minTranslate","oldIndex","newIndex","handleSortEnd","endEvent","_sortTouchMoveListene","_sortTouchEndListener","sortMouseMoveListener","off","sortMouseEndListener","sortTouchMoveListener","sortTouchEndListener","style","overflow","holderTranslate","setTimeout","_activeNodeHelper2","parentNode","removeChild","remove","_iterator","_step","el","clear","callbackPayload","window","passive","handleStart","mouseDownEvent","triggeredNode","target","targetNode","Boolean","button","disabled","HTMLElement","contains","handleTouchStart","touchStartEvent","handleEnd","clearTimeout","handleTouchEnd","register"],"sources":["C:/Users/MVclouds/Desktop/QuickForm/Merged Mapping QF/QuickForm/QuickForm-Romit-Kajal-Merge/quick-form-app/node_modules/rsuite/esm/List/helper/useSortHelper.js"],"sourcesContent":["'use client';\nfunction _createForOfIteratorHelperLoose(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (t) return (t = t.call(r)).next.bind(t); if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var o = 0; return function () { return o >= r.length ? { done: !0 } : { done: !1, value: r[o++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nimport on from 'dom-lib/on';\nimport { useCallback, useRef, useState } from 'react';\nimport AutoScroller from \"./AutoScroller.js\";\nimport { closestNode, getEdgeOffset, getScrollingParent, isContainInteractiveElement, setInlineStyles, setTransitionDuration, setTranslate3d } from \"./utils.js\";\nimport { useIsMounted } from \"../../internals/hooks/index.js\";\nimport useManager from \"./useManager.js\";\nvar helperElementClass = 'rs-list-item-helper';\nvar holderElementClass = 'rs-list-item-holder';\nvar useSortHelper = function useSortHelper(config) {\n  var autoScroll = config.autoScroll,\n    pressDelay = config.pressDelay,\n    transitionDuration = config.transitionDuration,\n    onSort = config.onSort,\n    onSortEnd = config.onSortEnd,\n    onSortMove = config.onSortMove,\n    onSortStart = config.onSortStart;\n  var _useState = useState(false),\n    sorting = _useState[0],\n    setSorting = _useState[1];\n  var containerRef = useRef(null);\n  var pressTimer = useRef();\n  var _useManager = useManager(),\n    listItemRegister = _useManager.listItemRegister,\n    getManagedItem = _useManager.getManagedItem,\n    getOrderedItems = _useManager.getOrderedItems;\n  var isMounted = useIsMounted();\n\n  /**\n   * start dragging\n   * */\n  var handlePress = useCallback(function (event, _targetNode, curManagedItem) {\n    var _curManagedItem$info$, _curManagedItem$info$2, _activeNodeHelper;\n    if (!isMounted()) return;\n    // data\n    var containerElement = containerRef.current;\n    var activeNode = curManagedItem.node;\n    var activeNodeOldIndex = (_curManagedItem$info$ = curManagedItem.info.index) !== null && _curManagedItem$info$ !== void 0 ? _curManagedItem$info$ : 0;\n    var activeNodeNextIndex = (_curManagedItem$info$2 = curManagedItem.info.index) !== null && _curManagedItem$info$2 !== void 0 ? _curManagedItem$info$2 : 0;\n    var activeNodeHolderTranslate = {\n      x: 0,\n      y: 0\n    };\n    var animatedNodesOffset = []; // all list item offset\n\n    // Get initial position from event\n    var isTouchEvent = 'touches' in event;\n    var initialPosition = {\n      pageX: isTouchEvent ? event.touches[0].pageX : event.pageX,\n      pageY: isTouchEvent ? event.touches[0].pageY : event.pageY\n    };\n\n    // init scroller\n    var scrollContainer = getScrollingParent(containerElement) || containerElement;\n    var initScroll = {\n      x: scrollContainer.scrollLeft,\n      y: scrollContainer.scrollTop\n    };\n    var autoScroller = new AutoScroller(scrollContainer, function (offset) {\n      activeNodeHolderTranslate.x += offset.left;\n      activeNodeHolderTranslate.y += offset.top;\n    });\n    var activeNodeBoundingClientRect = activeNode.getBoundingClientRect();\n    var activeNodeOffsetEdge = getEdgeOffset(activeNode, containerElement);\n    var activeNodeStyle = getComputedStyle(activeNode);\n    var activeNodeHelper = activeNode.cloneNode(true);\n    (_activeNodeHelper = activeNodeHelper) === null || _activeNodeHelper === void 0 || _activeNodeHelper.classList.add(helperElementClass);\n    setInlineStyles(activeNodeHelper, {\n      position: 'fixed',\n      width: activeNodeBoundingClientRect.width + \"px\",\n      height: activeNodeBoundingClientRect.height + \"px\",\n      left: activeNodeBoundingClientRect.left - parseFloat(activeNodeStyle.marginLeft) + \"px\",\n      top: activeNodeBoundingClientRect.top - parseFloat(activeNodeStyle.marginTop) + \"px\"\n    });\n    activeNode.classList.add(holderElementClass);\n    document.body.appendChild(activeNodeHelper);\n    var getContainerScrollDelta = function getContainerScrollDelta() {\n      return {\n        left: scrollContainer.scrollLeft - initScroll.x,\n        top: scrollContainer.scrollTop - initScroll.y\n      };\n    };\n    var getHolderTranslate = function getHolderTranslate() {\n      return animatedNodesOffset.reduce(function (acc, item) {\n        return {\n          x: acc.x + item.x,\n          y: acc.y + item.y\n        };\n      }, {\n        x: 0,\n        y: 0\n      });\n    };\n\n    // Common handler for both mouse and touch move events\n    var handleSortMove = function handleSortMove(moveEvent) {\n      // Prevent default to stop page scrolling during touch drag\n      if ('touches' in moveEvent) {\n        moveEvent.preventDefault();\n      }\n\n      // Get current position from event\n      var isTouchMoveEvent = 'touches' in moveEvent;\n      var currentPosition = {\n        pageX: isTouchMoveEvent ? moveEvent.touches[0].pageX : moveEvent.pageX,\n        pageY: isTouchMoveEvent ? moveEvent.touches[0].pageY : moveEvent.pageY\n      };\n\n      // Update helper position\n      var offset = {\n        x: currentPosition.pageX,\n        y: currentPosition.pageY\n      };\n      var containerScrollDelta = getContainerScrollDelta();\n      var containerBoundingRect = scrollContainer.getBoundingClientRect();\n      activeNodeHolderTranslate = {\n        x: offset.x - initialPosition.pageX,\n        y: offset.y - initialPosition.pageY\n      };\n      if (activeNodeHelper) {\n        setTranslate3d(activeNodeHelper, activeNodeHolderTranslate);\n      }\n\n      // animate\n      activeNodeNextIndex = -1;\n      var listItemManagerRefs = getOrderedItems(curManagedItem.info.collection);\n      var aTop = activeNodeOffsetEdge.top || 0;\n      var cTop = containerScrollDelta.top || 0;\n      var sortingOffsetY = aTop + activeNodeHolderTranslate.y + cTop;\n      for (var i = 0, len = listItemManagerRefs.length; i < len; i++) {\n        var _listItemManagerRefs$;\n        var currentNode = listItemManagerRefs[i].node;\n        var currentNodeIndex = (_listItemManagerRefs$ = listItemManagerRefs[i].info.index) !== null && _listItemManagerRefs$ !== void 0 ? _listItemManagerRefs$ : 0;\n        var offsetY = activeNodeBoundingClientRect.height > currentNode.offsetHeight ? currentNode.offsetHeight / 2 : activeNodeBoundingClientRect.height / 2;\n        var translate = {\n          x: 0,\n          y: 0\n        };\n\n        // If we haven't cached the node's offsetTop / offsetLeft value\n        var curEdgeOffset = listItemManagerRefs[i].edgeOffset || getEdgeOffset(currentNode, containerElement);\n        listItemManagerRefs[i].edgeOffset = curEdgeOffset;\n\n        // Get a reference to the next node\n        var prvNode = i > 0 && listItemManagerRefs[i - 1];\n        var nextNode = i < len - 1 && listItemManagerRefs[i + 1];\n\n        // Also cache the node's edge offset if needed.\n        if (prvNode && !prvNode.edgeOffset) {\n          prvNode.edgeOffset = getEdgeOffset(prvNode.node, containerElement);\n        }\n        if (nextNode && !nextNode.edgeOffset) {\n          nextNode.edgeOffset = getEdgeOffset(nextNode.node, containerElement);\n        }\n\n        // If the node is the one we're currently animating, skip it\n        if (currentNodeIndex === activeNodeOldIndex) {\n          continue;\n        }\n        var curEdgeOffsetTop = curEdgeOffset.top || 0;\n        if (prvNode && currentNodeIndex > activeNodeOldIndex && sortingOffsetY + offsetY >= curEdgeOffsetTop) {\n          var _prvNode$edgeOffset;\n          var yOffset = (((_prvNode$edgeOffset = prvNode.edgeOffset) === null || _prvNode$edgeOffset === void 0 ? void 0 : _prvNode$edgeOffset.top) || 0) - curEdgeOffsetTop;\n          translate.y = yOffset;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -yOffset\n          };\n          activeNodeNextIndex = currentNodeIndex;\n        } else if (nextNode && currentNodeIndex < activeNodeOldIndex && sortingOffsetY <= curEdgeOffsetTop + offsetY) {\n          var _nextNode$edgeOffset;\n          var _yOffset = (((_nextNode$edgeOffset = nextNode.edgeOffset) === null || _nextNode$edgeOffset === void 0 ? void 0 : _nextNode$edgeOffset.top) || 0) - curEdgeOffsetTop;\n          translate.y = _yOffset;\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: -_yOffset\n          };\n          if (activeNodeNextIndex === -1) {\n            activeNodeNextIndex = currentNodeIndex;\n          }\n        } else {\n          animatedNodesOffset[currentNodeIndex] = {\n            x: 0,\n            y: 0\n          };\n        }\n        setTransitionDuration(currentNode, transitionDuration);\n        setTranslate3d(currentNode, translate);\n\n        // translate holder\n        setTranslate3d(activeNode, getHolderTranslate());\n      }\n      if (activeNodeNextIndex === -1) {\n        activeNodeNextIndex = activeNodeOldIndex;\n      }\n\n      // auto scroll\n      if (autoScroll) {\n        autoScroller.update({\n          width: activeNodeBoundingClientRect.width,\n          height: activeNodeBoundingClientRect.height,\n          translate: activeNodeHolderTranslate,\n          maxTranslate: {\n            x: 0,\n            y: containerBoundingRect.top + containerBoundingRect.height - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          },\n          minTranslate: {\n            x: 0,\n            y: containerBoundingRect.top - activeNodeBoundingClientRect.top - activeNodeBoundingClientRect.height / 2\n          }\n        });\n      }\n      onSortMove === null || onSortMove === void 0 || onSortMove({\n        collection: curManagedItem.info.collection,\n        node: activeNode,\n        oldIndex: activeNodeOldIndex,\n        newIndex: activeNodeNextIndex\n      }, moveEvent);\n    };\n\n    // Common handler for both mouse and touch end events\n    var handleSortEnd = function handleSortEnd(endEvent) {\n      var _sortTouchMoveListene, _sortTouchEndListener;\n      // Remove the event listeners\n      sortMouseMoveListener.off();\n      sortMouseEndListener.off();\n      (_sortTouchMoveListene = sortTouchMoveListener) === null || _sortTouchMoveListene === void 0 || _sortTouchMoveListene.off();\n      (_sortTouchEndListener = sortTouchEndListener) === null || _sortTouchEndListener === void 0 || _sortTouchEndListener.off();\n\n      // Enable page scrolling again\n      if (document.body.style.overflow === 'hidden') {\n        document.body.style.overflow = '';\n      }\n      var holderTranslate = getHolderTranslate();\n      var containerScrollDelta = getContainerScrollDelta();\n      if (activeNodeHelper) {\n        setTranslate3d(activeNodeHelper, {\n          x: holderTranslate.x - (containerScrollDelta.left || 0),\n          y: holderTranslate.y - (containerScrollDelta.top || 0)\n        });\n        setTransitionDuration(activeNodeHelper, transitionDuration);\n      }\n\n      // wait for animation\n      setTimeout(function () {\n        var _activeNodeHelper2;\n        if (!isMounted()) return;\n        // Remove the helper from the DOM\n        (_activeNodeHelper2 = activeNodeHelper) === null || _activeNodeHelper2 === void 0 || (_activeNodeHelper2 = _activeNodeHelper2.parentNode) === null || _activeNodeHelper2 === void 0 || _activeNodeHelper2.removeChild(activeNodeHelper);\n        activeNodeHelper = null;\n\n        // Remove redundant styles\n        activeNode.classList.remove(holderElementClass);\n        setTranslate3d(activeNode, null);\n        animatedNodesOffset = [];\n        for (var _iterator = _createForOfIteratorHelperLoose(getOrderedItems(curManagedItem.info.collection)), _step; !(_step = _iterator()).done;) {\n          var item = _step.value;\n          // Clear the cached offsetTop / offsetLeft value\n          item.edgeOffset = null;\n\n          // Remove the transforms / transitions\n          var el = item.node;\n          setTranslate3d(el, null);\n          setTransitionDuration(el, null);\n        }\n\n        // Stop autoScroll\n        autoScroller.clear();\n\n        // Update manager state\n        setSorting(false);\n\n        // callbacks\n        var callbackPayload = {\n          collection: curManagedItem.info.collection,\n          node: curManagedItem.node,\n          newIndex: activeNodeNextIndex,\n          oldIndex: activeNodeOldIndex\n        };\n        onSortEnd === null || onSortEnd === void 0 || onSortEnd(callbackPayload, endEvent);\n        onSort === null || onSort === void 0 || onSort(callbackPayload, endEvent);\n      }, transitionDuration);\n    };\n\n    // Set up mouse event listeners\n    var sortMouseMoveListener = on(window, 'mousemove', handleSortMove, {\n      passive: false\n    });\n    var sortMouseEndListener = on(window, 'mouseup', handleSortEnd, {\n      passive: false\n    });\n\n    // Set up touch event listeners\n    var sortTouchMoveListener;\n    var sortTouchEndListener;\n    if (isTouchEvent) {\n      // Disable page scrolling during touch drag\n      document.body.style.overflow = 'hidden';\n      sortTouchMoveListener = on(window, 'touchmove', handleSortMove, {\n        passive: false\n      } // Important: passive: false allows preventDefault() to work\n      );\n      sortTouchEndListener = on(window, 'touchend', handleSortEnd, {\n        passive: false\n      });\n    }\n    setSorting(true);\n    // start callback\n    onSortStart === null || onSortStart === void 0 || onSortStart({\n      collection: curManagedItem.info.collection,\n      node: activeNode,\n      oldIndex: activeNodeOldIndex,\n      newIndex: activeNodeNextIndex\n    }, event);\n  }, [autoScroll, getOrderedItems, isMounted, onSort, onSortEnd, onSortMove, onSortStart, transitionDuration]);\n\n  /**\n   * Determine whether to start dragging\n   * */\n  var handleStart = useCallback(function (mouseDownEvent) {\n    var triggeredNode = mouseDownEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n    if (\n    // is not secondary button pressed\n    mouseDownEvent.button !== 2 &&\n    // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled &&\n    // is not sorting\n    !sorting &&\n    // is valid node\n    targetNode instanceof HTMLElement &&\n    // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      mouseDownEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, mouseDownEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n\n  /**\n   * Handle touch start for mobile devices\n   */\n  var handleTouchStart = useCallback(function (touchStartEvent) {\n    var triggeredNode = touchStartEvent.target;\n    var targetNode = closestNode(triggeredNode, function (el) {\n      return Boolean(getManagedItem(el));\n    });\n    var curManagedItem = getManagedItem(targetNode);\n    if (\n    // is list item\n    Boolean(curManagedItem) && !curManagedItem.info.disabled &&\n    // is not sorting\n    !sorting &&\n    // is valid node\n    targetNode instanceof HTMLElement &&\n    // excludes interactive elements\n    !targetNode.contains(closestNode(triggeredNode, isContainInteractiveElement))) {\n      // Prevent scrolling while sorting\n      touchStartEvent.preventDefault();\n      pressTimer.current = setTimeout(handlePress, pressDelay, touchStartEvent, targetNode, curManagedItem);\n    }\n  }, [getManagedItem, handlePress, pressDelay, sorting]);\n\n  /**\n   * Clear timer after drag\n   * */\n  var handleEnd = useCallback(function () {\n    clearTimeout(pressTimer.current);\n\n    // Ensure page scrolling is re-enabled\n    if (document.body.style.overflow === 'hidden') {\n      document.body.style.overflow = '';\n    }\n  }, []);\n\n  /**\n   * Clear timer after touch end\n   */\n  var handleTouchEnd = useCallback(function () {\n    clearTimeout(pressTimer.current);\n\n    // Ensure page scrolling is re-enabled\n    if (document.body.style.overflow === 'hidden') {\n      document.body.style.overflow = '';\n    }\n  }, []);\n  return {\n    handleStart: handleStart,\n    handleEnd: handleEnd,\n    handleTouchStart: handleTouchStart,\n    handleTouchEnd: handleTouchEnd,\n    containerRef: containerRef,\n    sorting: sorting,\n    register: listItemRegister\n  };\n};\nexport default useSortHelper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}