{"ast":null,"code":"'use client';\n\nimport { ObjectType, ArrayType } from 'schema-typed';\nimport set from 'lodash/set';\n\n/**\n * combine flat schema to nested schema\n */\nexport function constructFlatSchema(schema) {\n  var shape = {};\n  Object.keys(schema).forEach(function (key) {\n    set(shape, key, {\n      schema: schema[key],\n      primitiveType: true\n    });\n  });\n  function convertShapeToSchema(shape, result, internal) {\n    Object.keys(shape).forEach(function (key) {\n      var currentShape = shape[key];\n      if (Array.isArray(currentShape)) {\n        var _ArrayType;\n        result[key] = (_ArrayType = ArrayType()).of.apply(_ArrayType, currentShape.map(function (v) {\n          if (v.primitiveType) {\n            return v.schema;\n          }\n          return convertShapeToSchema(v, {}, true);\n        }));\n      } else {\n        if (currentShape.primitiveType) {\n          result[key] = currentShape.schema;\n        } else {\n          result[key] = convertShapeToSchema(currentShape, {}, true);\n        }\n      }\n    });\n    return internal ? ObjectType().shape(result) : result;\n  }\n  return convertShapeToSchema(shape, {});\n}","map":{"version":3,"names":["ObjectType","ArrayType","set","constructFlatSchema","schema","shape","Object","keys","forEach","key","primitiveType","convertShapeToSchema","result","internal","currentShape","Array","isArray","_ArrayType","of","apply","map","v"],"sources":["C:/Users/MVclouds/Desktop/QuickForm/Merged Mapping QF/QuickForm/QuickForm-Romit-Kajal-Merge/quick-form-app/node_modules/rsuite/esm/Form/utils/constructFlatSchema.js"],"sourcesContent":["'use client';\nimport { ObjectType, ArrayType } from 'schema-typed';\nimport set from 'lodash/set';\n\n/**\n * combine flat schema to nested schema\n */\nexport function constructFlatSchema(schema) {\n  var shape = {};\n  Object.keys(schema).forEach(function (key) {\n    set(shape, key, {\n      schema: schema[key],\n      primitiveType: true\n    });\n  });\n  function convertShapeToSchema(shape, result, internal) {\n    Object.keys(shape).forEach(function (key) {\n      var currentShape = shape[key];\n      if (Array.isArray(currentShape)) {\n        var _ArrayType;\n        result[key] = (_ArrayType = ArrayType()).of.apply(_ArrayType, currentShape.map(function (v) {\n          if (v.primitiveType) {\n            return v.schema;\n          }\n          return convertShapeToSchema(v, {}, true);\n        }));\n      } else {\n        if (currentShape.primitiveType) {\n          result[key] = currentShape.schema;\n        } else {\n          result[key] = convertShapeToSchema(currentShape, {}, true);\n        }\n      }\n    });\n    return internal ? ObjectType().shape(result) : result;\n  }\n  return convertShapeToSchema(shape, {});\n}"],"mappings":"AAAA,YAAY;;AACZ,SAASA,UAAU,EAAEC,SAAS,QAAQ,cAAc;AACpD,OAAOC,GAAG,MAAM,YAAY;;AAE5B;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,MAAM,EAAE;EAC1C,IAAIC,KAAK,GAAG,CAAC,CAAC;EACdC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAACI,OAAO,CAAC,UAAUC,GAAG,EAAE;IACzCP,GAAG,CAACG,KAAK,EAAEI,GAAG,EAAE;MACdL,MAAM,EAAEA,MAAM,CAACK,GAAG,CAAC;MACnBC,aAAa,EAAE;IACjB,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,SAASC,oBAAoBA,CAACN,KAAK,EAAEO,MAAM,EAAEC,QAAQ,EAAE;IACrDP,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC,CAACG,OAAO,CAAC,UAAUC,GAAG,EAAE;MACxC,IAAIK,YAAY,GAAGT,KAAK,CAACI,GAAG,CAAC;MAC7B,IAAIM,KAAK,CAACC,OAAO,CAACF,YAAY,CAAC,EAAE;QAC/B,IAAIG,UAAU;QACdL,MAAM,CAACH,GAAG,CAAC,GAAG,CAACQ,UAAU,GAAGhB,SAAS,CAAC,CAAC,EAAEiB,EAAE,CAACC,KAAK,CAACF,UAAU,EAAEH,YAAY,CAACM,GAAG,CAAC,UAAUC,CAAC,EAAE;UAC1F,IAAIA,CAAC,CAACX,aAAa,EAAE;YACnB,OAAOW,CAAC,CAACjB,MAAM;UACjB;UACA,OAAOO,oBAAoB,CAACU,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;QAC1C,CAAC,CAAC,CAAC;MACL,CAAC,MAAM;QACL,IAAIP,YAAY,CAACJ,aAAa,EAAE;UAC9BE,MAAM,CAACH,GAAG,CAAC,GAAGK,YAAY,CAACV,MAAM;QACnC,CAAC,MAAM;UACLQ,MAAM,CAACH,GAAG,CAAC,GAAGE,oBAAoB,CAACG,YAAY,EAAE,CAAC,CAAC,EAAE,IAAI,CAAC;QAC5D;MACF;IACF,CAAC,CAAC;IACF,OAAOD,QAAQ,GAAGb,UAAU,CAAC,CAAC,CAACK,KAAK,CAACO,MAAM,CAAC,GAAGA,MAAM;EACvD;EACA,OAAOD,oBAAoB,CAACN,KAAK,EAAE,CAAC,CAAC,CAAC;AACxC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}