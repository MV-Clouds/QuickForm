{"ast":null,"code":"import { useReducer, useCallback } from 'react';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar ActionType;\n(function (ActionType) {\n  ActionType[\"Undo\"] = \"UNDO\";\n  ActionType[\"Redo\"] = \"REDO\";\n  ActionType[\"Set\"] = \"SET\";\n  ActionType[\"Reset\"] = \"RESET\";\n})(ActionType || (ActionType = {}));\nvar initialState = {\n  past: [],\n  present: null,\n  future: []\n};\nvar useUndo = function useUndo(initialPresent, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n  var _useCheckpoints$opts = _extends({\n      useCheckpoints: false\n    }, opts),\n    useCheckpoints = _useCheckpoints$opts.useCheckpoints;\n  var reducer = function reducer(state, action) {\n    var past = state.past,\n      present = state.present,\n      future = state.future;\n    switch (action.type) {\n      case ActionType.Undo:\n        {\n          if (past.length === 0) {\n            return state;\n          }\n          var previous = past[past.length - 1];\n          var newPast = past.slice(0, past.length - 1);\n          return {\n            past: newPast,\n            present: previous,\n            future: [present].concat(future)\n          };\n        }\n      case ActionType.Redo:\n        {\n          if (future.length === 0) {\n            return state;\n          }\n          var next = future[0];\n          var newFuture = future.slice(1);\n          return {\n            past: [].concat(past, [present]),\n            present: next,\n            future: newFuture\n          };\n        }\n      case ActionType.Set:\n        {\n          var isNewCheckpoint = useCheckpoints ? !!action.historyCheckpoint : true;\n          var newPresent = action.newPresent;\n          if (newPresent === present) {\n            return state;\n          }\n          return {\n            past: isNewCheckpoint === false ? past : [].concat(past, [present]),\n            present: newPresent,\n            future: []\n          };\n        }\n      case ActionType.Reset:\n        {\n          var _newPresent = action.newPresent;\n          return {\n            past: [],\n            present: _newPresent,\n            future: []\n          };\n        }\n    }\n  };\n  var _useReducer = useReducer(reducer, _extends({}, initialState, {\n      present: initialPresent\n    })),\n    state = _useReducer[0],\n    dispatch = _useReducer[1];\n  var canUndo = state.past.length !== 0;\n  var canRedo = state.future.length !== 0;\n  var undo = useCallback(function () {\n    if (canUndo) {\n      dispatch({\n        type: ActionType.Undo\n      });\n    }\n  }, [canUndo]);\n  var redo = useCallback(function () {\n    if (canRedo) {\n      dispatch({\n        type: ActionType.Redo\n      });\n    }\n  }, [canRedo]);\n  var set = useCallback(function (newPresent, checkpoint) {\n    if (checkpoint === void 0) {\n      checkpoint = false;\n    }\n    dispatch({\n      type: ActionType.Set,\n      newPresent: newPresent,\n      historyCheckpoint: checkpoint\n    });\n  }, []);\n  var reset = useCallback(function (newPresent) {\n    return dispatch({\n      type: ActionType.Reset,\n      newPresent: newPresent\n    });\n  }, []);\n  return [state, {\n    set: set,\n    reset: reset,\n    undo: undo,\n    redo: redo,\n    canUndo: canUndo,\n    canRedo: canRedo\n  }];\n};\nexport default useUndo;","map":{"version":3,"names":["useReducer","useCallback","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","ActionType","initialState","past","present","future","useUndo","initialPresent","opts","_useCheckpoints$opts","useCheckpoints","reducer","state","action","type","Undo","previous","newPast","slice","concat","Redo","next","newFuture","Set","isNewCheckpoint","historyCheckpoint","newPresent","Reset","_newPresent","_useReducer","dispatch","canUndo","canRedo","undo","redo","set","checkpoint","reset"],"sources":["C:/Users/MVclouds/Desktop/QuickForm/Merged Mapping QF/QuickForm/QuickForm-Romit-Kajal-Merge/quick-form-app/node_modules/use-undo/lib/use-undo.m.js"],"sourcesContent":["import { useReducer, useCallback } from 'react';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar ActionType;\n\n(function (ActionType) {\n  ActionType[\"Undo\"] = \"UNDO\";\n  ActionType[\"Redo\"] = \"REDO\";\n  ActionType[\"Set\"] = \"SET\";\n  ActionType[\"Reset\"] = \"RESET\";\n})(ActionType || (ActionType = {}));\n\nvar initialState = {\n  past: [],\n  present: null,\n  future: []\n};\n\nvar useUndo = function useUndo(initialPresent, opts) {\n  if (opts === void 0) {\n    opts = {};\n  }\n\n  var _useCheckpoints$opts = _extends({\n    useCheckpoints: false\n  }, opts),\n      useCheckpoints = _useCheckpoints$opts.useCheckpoints;\n\n  var reducer = function reducer(state, action) {\n    var past = state.past,\n        present = state.present,\n        future = state.future;\n\n    switch (action.type) {\n      case ActionType.Undo:\n        {\n          if (past.length === 0) {\n            return state;\n          }\n\n          var previous = past[past.length - 1];\n          var newPast = past.slice(0, past.length - 1);\n          return {\n            past: newPast,\n            present: previous,\n            future: [present].concat(future)\n          };\n        }\n\n      case ActionType.Redo:\n        {\n          if (future.length === 0) {\n            return state;\n          }\n\n          var next = future[0];\n          var newFuture = future.slice(1);\n          return {\n            past: [].concat(past, [present]),\n            present: next,\n            future: newFuture\n          };\n        }\n\n      case ActionType.Set:\n        {\n          var isNewCheckpoint = useCheckpoints ? !!action.historyCheckpoint : true;\n          var newPresent = action.newPresent;\n\n          if (newPresent === present) {\n            return state;\n          }\n\n          return {\n            past: isNewCheckpoint === false ? past : [].concat(past, [present]),\n            present: newPresent,\n            future: []\n          };\n        }\n\n      case ActionType.Reset:\n        {\n          var _newPresent = action.newPresent;\n          return {\n            past: [],\n            present: _newPresent,\n            future: []\n          };\n        }\n    }\n  };\n\n  var _useReducer = useReducer(reducer, _extends({}, initialState, {\n    present: initialPresent\n  })),\n      state = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var canUndo = state.past.length !== 0;\n  var canRedo = state.future.length !== 0;\n  var undo = useCallback(function () {\n    if (canUndo) {\n      dispatch({\n        type: ActionType.Undo\n      });\n    }\n  }, [canUndo]);\n  var redo = useCallback(function () {\n    if (canRedo) {\n      dispatch({\n        type: ActionType.Redo\n      });\n    }\n  }, [canRedo]);\n  var set = useCallback(function (newPresent, checkpoint) {\n    if (checkpoint === void 0) {\n      checkpoint = false;\n    }\n\n    dispatch({\n      type: ActionType.Set,\n      newPresent: newPresent,\n      historyCheckpoint: checkpoint\n    });\n  }, []);\n  var reset = useCallback(function (newPresent) {\n    return dispatch({\n      type: ActionType.Reset,\n      newPresent: newPresent\n    });\n  }, []);\n  return [state, {\n    set: set,\n    reset: reset,\n    undo: undo,\n    redo: redo,\n    canUndo: canUndo,\n    canRedo: canRedo\n  }];\n};\n\nexport default useUndo;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}