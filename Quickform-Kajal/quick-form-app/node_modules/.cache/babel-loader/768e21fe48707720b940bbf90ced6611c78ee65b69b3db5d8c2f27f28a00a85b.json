{"ast":null,"code":"import _objectSpread from\"C:/Users/MVclouds/Desktop/QuickForm/Merged Mapping QF/QuickForm/QuickForm-Romit-Kajal-Merge/quick-form-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useMemo,useCallback}from'react';import{useNavigate}from'react-router-dom';import{motion,AnimatePresence}from'framer-motion';import FormName from'./FormName';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const itemVariants={hidden:{opacity:0,scale:0.95,y:10},// Animation variant for hidden state\nvisible:{opacity:1,scale:1,y:0},// Animation variant for visible state\nexit:{opacity:0,scale:0.95,y:-10}// Animation variant for exit state\n};const CreateFormWizard=()=>{const[step,setStep]=useState(1);// State for tracking current step (1 or 2)\nconst[selectedObjects,setSelectedObjects]=useState([]);// State for storing selected object names\nconst[metadata,setMetadata]=useState([]);// State for storing metadata (list of objects)\nconst[fieldsData,setFieldsData]=useState({});// State for storing fields data for each object\nconst[selectedFields,setSelectedFields]=useState({});// State for storing selected fields for each object\nconst[currentObject,setCurrentObject]=useState('');// State for tracking the currently selected object in Step 2\nconst[error,setError]=useState('');// State for storing error messages\nconst[isLoading,setIsLoading]=useState(false);// State for tracking loading status\nconst[objectSearch,setObjectSearch]=useState('');// State for object search input\nconst[fieldSearch,setFieldSearch]=useState('');// State for field search input\nconst[accessToken,setAccessToken]=useState(null);// State for storing access token\nconst[isFormNameOpen,setIsFormNameOpen]=useState(false);const navigate=useNavigate();// Hook for navigation\n// Memoize filtered metadata based on search input\nconst filteredMetadata=useMemo(()=>{const list=Array.isArray(metadata)?metadata:[];return list.filter(obj=>obj.name.toLowerCase().includes(objectSearch.toLowerCase())||obj.label.toLowerCase().includes(objectSearch.toLowerCase()));},[metadata,objectSearch]);// Memoize filtered fields based on search input for the current object\nconst filteredFields=useMemo(()=>{var _fieldsData$currentOb;return((_fieldsData$currentOb=fieldsData[currentObject])===null||_fieldsData$currentOb===void 0?void 0:_fieldsData$currentOb.filter(// Filter fields based on search\nfield=>field.name.toLowerCase().includes(fieldSearch.toLowerCase())||// Filter by field name\nfield.label.toLowerCase().includes(fieldSearch.toLowerCase())// Filter by field label\n))||[]// Return empty array if no fields exist\n;},[fieldsData,currentObject,fieldSearch]);// Dependencies for memoization\n// Function to fetch access token from Lambda\nconst fetchAccessToken=async(userId,instanceUrl)=>{try{const response=await fetch(process.env.REACT_APP_GET_ACCESS_TOKEN_URL,{// Fetch token from Lambda\nmethod:'POST',// HTTP method\nheaders:{'Content-Type':'application/json'// Request content type\n},body:JSON.stringify({userId,// User ID for token request\ninstanceUrl// Instance URL for token request\n})});const data=await response.json();// Parse response JSON\nif(!response.ok){// Check if response is not OK\nthrow new Error(data.error||'Failed to fetch access token');// Throw error if token fetch fails\n}setAccessToken(data.access_token);// Store access token in state\nreturn data.access_token;// Return the access token\n}catch(error){console.error('Error fetching access token:',error);// Log error to console\nsetError('Error fetching access token: '+error.message);// Set error message in state\nthrow error;// Rethrow error for further handling\n}};// Fetch metadata when component mounts\nuseEffect(()=>{const fetchMetadata=async()=>{setIsLoading(true);// Set loading state to true\ntry{const userId=sessionStorage.getItem('userId');// Get user ID from session storage\nconst instanceUrl=sessionStorage.getItem('instanceUrl');// Get instance URL from session storage\nif(!userId||!instanceUrl){// Check if user is authenticated\nthrow new Error('User not authenticated');// Throw error if user is not authenticated\n}const token=await fetchAccessToken(userId,instanceUrl);// Fetch access token\nconst cleanedInstanceUrl=instanceUrl.replace(/https?:\\/\\//,'');// Clean instance URL by removing protocol\nconst metadataResponse=await fetch(process.env.REACT_APP_FETCH_METADATA_URL,{// Fetch metadata from Lambda\nmethod:'POST',// HTTP method\nheaders:{'Content-Type':'application/json',// Request content type\nAuthorization:\"Bearer \".concat(token)// Authorization header with token\n},body:JSON.stringify({userId,// User ID for metadata request\ninstanceUrl:cleanedInstanceUrl// Cleaned instance URL for metadata request\n})});if(!metadataResponse.ok){// Check if response is not OK\nthrow new Error('Failed to fetch metadata');// Throw error if metadata fetch fails\n}const metadataData=await metadataResponse.json();// Parse response JSON\nif(metadataData.metadata){// Check if metadata exists in response\nsetMetadata(JSON.parse(metadataData.metadata));// Parse and set metadata in state\n}else{setError('No metadata found for this user.');// Set error if no metadata is found\n}}catch(err){console.error('Error fetching metadata:',err);// Log error to console\nsetError('Error fetching metadata: '+err.message);// Set error message in state\n}finally{setIsLoading(false);// Set loading state to false\n}};fetchMetadata();// Call the fetchMetadata function\n},[]);// Empty dependency array ensures this runs only on mount\n// Fetch fields for a specific object\nconst fetchFieldsForObject=async objectName=>{if(fieldsData[objectName]){// Check if fields for this object are already fetched\nreturn fieldsData[objectName];// Return cached fields\n}try{const instanceUrl=sessionStorage.getItem('instanceUrl');// Get instance URL from session storage\nconst userId=sessionStorage.getItem('userId');// Get user ID from session storage\nif(!accessToken||!instanceUrl||!userId){// Check if user is authenticated\nthrow new Error('User not authenticated or instance URL missing');// Throw error if not authenticated\n}const cleanedInstanceUrl=instanceUrl.replace(/https?:\\/\\//,'');// Clean instance URL by removing protocol\nconst response=await fetch(process.env.REACT_APP_FETCH_FIELDS_URL,{// Fetch fields from Lambda\nmethod:'POST',// HTTP method\nheaders:{'Content-Type':'application/json',// Request content type\nAuthorization:\"Bearer \".concat(accessToken)// Authorization header with token\n},body:JSON.stringify({userId,// User ID for fields request\ninstanceUrl:cleanedInstanceUrl,// Cleaned instance URL for fields request\nobjectName,// Object name for which fields are fetched\naccess_token:accessToken// Access token for fields request\n})});if(!response.ok){// Check if response is not OK\nthrow new Error(\"Failed to fetch fields for \".concat(objectName));// Throw error if fields fetch fails\n}const data=await response.json();// Parse response JSON\nconst fields=data.fields||[];// Extract fields or default to empty array\nsetFieldsData(prev=>_objectSpread(_objectSpread({},prev),{},{[objectName]:fields}));// Update fieldsData state with new fields\nreturn fields;// Return the fetched fields\n}catch(error){console.error(\"Error fetching fields for \".concat(objectName,\":\"),error);// Log error to console\nsetError(\"Error fetching fields for \".concat(objectName,\": \").concat(error.message));// Set error message in state\nreturn[];// Return empty array on error\n}};// Toggle object selection in Step 1\nconst toggleObjectSelection=useCallback(objectName=>{setError('');// Clear any existing error\nif(selectedObjects.includes(objectName)){// Check if object is already selected\nsetSelectedObjects(selectedObjects.filter(obj=>obj!==objectName));// Remove object from selected list\nconst updatedFields=_objectSpread({},selectedFields);// Copy current selected fields\ndelete updatedFields[objectName];// Remove fields for the deselected object\nsetSelectedFields(updatedFields);// Update selected fields state\n}else{setSelectedObjects([...selectedObjects,objectName]);// Add object to selected list\n}},[selectedObjects,selectedFields]);// Dependencies for useCallback\n// Move all objects between available and selected lists\nconst moveAllObjects=useCallback(direction=>{if(direction==='right'){// Check if moving all to selected\nconst availableObjects=filteredMetadata.filter(obj=>!selectedObjects.includes(obj.name))// Get all unselected objects\n.map(obj=>obj.name);// Map to object names\nsetSelectedObjects([...selectedObjects,...availableObjects]);// Add all to selected list\n}else{setSelectedObjects([]);// Clear selected objects\nsetSelectedFields({});// Clear selected fields\n}},[filteredMetadata,selectedObjects]);// Dependencies for useCallback\n// Toggle field selection in Step 2\nconst toggleFieldSelection=useCallback(fieldName=>{setError('');// Clear any existing error\nconst field=fieldsData[currentObject].find(f=>f.name===fieldName);// Find the field in fields data\nif(field.referenceTo&&field.referenceTo.length>0){// Check if field has a reference\nconst referencedObject=field.referenceTo[0];// Get the referenced object\nif(!selectedObjects.includes(referencedObject)){// Check if referenced object is selected\nsetError(\"Cannot select \".concat(field.name,\" on \").concat(currentObject,\" because \").concat(referencedObject,\" object is not selected.\")// Set error if referenced object is not selected\n);return;// Exit function\n}}const currentSelected=selectedFields[currentObject]||[];// Get currently selected fields for the object\nif(currentSelected.includes(fieldName)){// Check if field is already selected\nif(field.required){// Check if field is required\nsetError(\"Cannot remove \".concat(field.name,\" from selected fields because it is required.\"));// Set error if required field\nreturn;// Exit function\n}setSelectedFields(_objectSpread(_objectSpread({},selectedFields),{},{[currentObject]:currentSelected.filter(f=>f!==fieldName)// Remove field from selected list\n}));}else{setSelectedFields(_objectSpread(_objectSpread({},selectedFields),{},{[currentObject]:[...currentSelected,fieldName]// Add field to selected list\n}));}},[fieldsData,currentObject,selectedObjects,selectedFields]);// Dependencies for useCallback\n// Move all fields between available and selected lists\nconst moveAllFields=useCallback(direction=>{if(!currentObject||!fieldsData[currentObject])return;// Exit if no current object or fields data\nif(direction==='right'){// Check if moving all to selected\nconst availableFields=filteredFields.filter(field=>!(selectedFields[currentObject]||[]).includes(field.name))// Get all unselected fields\n.map(field=>field.name);// Map to field names\n// Check for referenced objects\nconst fieldsWithReferences=fieldsData[currentObject].filter(field=>field.referenceTo&&field.referenceTo.length>0)// Filter fields with references\n.filter(field=>availableFields.includes(field.name))// Filter fields that are available\n.filter(field=>!selectedObjects.includes(field.referenceTo[0]));// Filter fields with unselected referenced objects\nif(fieldsWithReferences.length>0){// Check if there are fields with references\nsetError(\"Cannot select \".concat(fieldsWithReferences.map(f=>f.name).join(', '),\" because referenced objects are not selected.\")// Set error if referenced objects are not selected\n);return;// Exit function\n}setSelectedFields(_objectSpread(_objectSpread({},selectedFields),{},{[currentObject]:[...(selectedFields[currentObject]||[]),...availableFields]// Add all fields to selected list\n}));}else{// Only remove non-required fields\nconst requiredFields=fieldsData[currentObject].filter(field=>field.required)// Filter required fields\n.map(field=>field.name);// Map to field names\nsetSelectedFields(_objectSpread(_objectSpread({},selectedFields),{},{[currentObject]:requiredFields// Keep only required fields in selected list\n}));}},[currentObject,fieldsData,filteredFields,selectedFields,selectedObjects]);// Dependencies for useCallback\n// Handle navigation from Step 1 to Step 2\nconst handleNextStep=async()=>{setError('');// Clear any existing error\nif(selectedObjects.length===0){// Check if any objects are selected\nsetError('Please select at least one object.');// Set error if no objects selected\nreturn;// Exit function\n}setIsLoading(true);// Set loading state to true\ntry{const fieldsMap={};// Initialize fields map\nconst initialSelectedFields={};// Initialize selected fields map\n// Fetch fields for all objects in parallel\nconst fieldPromises=selectedObjects.map(async obj=>{const fields=await fetchFieldsForObject(obj);// Fetch fields for each object\nreturn{obj,fields};// Return object and its fields\n});const results=await Promise.all(fieldPromises);// Wait for all field fetches to complete\n// Process the results\nresults.forEach(_ref=>{let{obj,fields}=_ref;fieldsMap[obj]=fields;// Add fields to fields map\nconst requiredFields=fields.filter(field=>field.required).map(field=>field.name);// Get required fields\ninitialSelectedFields[obj]=requiredFields;// Set required fields as initially selected\n});setFieldsData(fieldsMap);// Update fields data state\nsetCurrentObject(selectedObjects[0]);// Set first selected object as current\nsetSelectedFields(initialSelectedFields);// Update selected fields state\nsetStep(2);// Move to Step 2\n}catch(error){setError('Error preparing fields: '+error.message);// Set error if field fetching fails\n}finally{setIsLoading(false);// Set loading state to false\n}};// Handle object dropdown change in Step 2\nconst handleObjectChange=useCallback(e=>{setCurrentObject(e.target.value);// Update current object based on dropdown selection\nsetError('');// Clear any existing error\n},[]);// Dependencies for useCallback\n// Handle form submission after Step 2\nconst handleSubmit=useCallback(()=>{setError('');// Clear any existing error\nfor(const obj of selectedObjects){var _fieldsData$obj;// Iterate through selected objects\nif(!selectedFields[obj]||selectedFields[obj].length===0){// Check if fields are selected for the object\nsetError(\"Please select at least one field for \".concat(obj,\".\"));// Set error if no fields selected\nreturn;// Exit function\n}const requiredFields=((_fieldsData$obj=fieldsData[obj])===null||_fieldsData$obj===void 0?void 0:_fieldsData$obj.filter(field=>field.required))||[];// Get required fields for the object\nconst selected=selectedFields[obj]||[];// Get selected fields for the object\nconst missingRequired=requiredFields.filter(field=>!selected.includes(field.name));// Find missing required fields\nif(missingRequired.length>0){// Check if any required fields are missing\nsetError(\"Please select all required fields for \".concat(obj,\": \").concat(missingRequired.map(f=>f.label).join(', '))// Set error for missing required fields\n);return;// Exit function\n}}setIsFormNameOpen(true);},[selectedObjects,selectedFields,fieldsData,navigate]);// Dependencies for useCallback\n// Handle closing the wizard\nconst closeWizard=useCallback(()=>{navigate('/home');// Navigate to home page when wizard is closed\n},[navigate]);// Dependencies for useCallback\n// Main JSX return statement with comments for major sections\nif(isFormNameOpen){return/*#__PURE__*/_jsx(FormName,{onClose:()=>setIsFormNameOpen(false),fields:[{id:'default-header',type:'header',heading:'Contact Form',alignment:'center'}],selectedObjects:selectedObjects// Pass selectedObjects\n,selectedFields:selectedFields// Pass selectedFields\n,fieldsData:fieldsData// Pass fieldsData\n});}return/*#__PURE__*/_jsxs(\"div\",{className:\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\",children:[\" \",isLoading&&/*#__PURE__*/// Loading overlay section\n_jsx(\"div\",{className:\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 z-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] flex flex-col\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center p-6 border-b\",children:[\" \",/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-gray-800\",children:\"Create Form Wizard\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeWizard,className:\"text-gray-500 hover:text-gray-700 text-xl\",\"aria-label\":\"Close\",children:\"\\xD7\"})]}),error&&/*#__PURE__*/// Error message section\n_jsx(\"div\",{className:\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 mr-2\",fill:\"currentColor\",viewBox:\"0 0 20 20\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9z\",clipRule:\"evenodd\"})}),/*#__PURE__*/_jsx(\"span\",{children:error})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow overflow-auto p-6\",children:[\" \",step===1&&/*#__PURE__*/// Step 1: Select Objects\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4 text-gray-700\",children:\"Step 1: Select Objects\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search objects...\",value:objectSearch,onChange:e=>setObjectSearch(e.target.value),className:\"w-full p-2 pl-10 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"svg\",{className:\"absolute left-3 top-3 h-4 w-4 text-gray-400\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-stretch gap-4\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-700\",children:\"Available Objects\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>moveAllObjects('right'),className:\"text-gray-500 hover:text-blue-600 p-1\",title:\"Add all\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M13 5l7 7-7 7M5 5l7 7-7 7\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg overflow-hidden flex-1\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"overflow-y-auto\",style:{height:'33vh'},children:[/*#__PURE__*/_jsx(AnimatePresence,{children:filteredMetadata.filter(obj=>!selectedObjects.includes(obj.name)).map(obj=>/*#__PURE__*/_jsxs(motion.div,{layout:true,variants:itemVariants,initial:\"hidden\",animate:\"visible\",exit:\"exit\",transition:{duration:0.05},className:\"flex items-center p-3 cursor-default hover:bg-gray-50 border-b bg-white\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow flex items-center\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:obj.label}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:obj.name})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleObjectSelection(obj.name),className:\"text-gray-400 hover:text-blue-600 p-1\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl\",children:\"\\u2192\"})})]},obj.name))}),filteredMetadata.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4 text-gray-500 h-full flex items-center justify-center\",children:\"No objects available\"})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-700\",children:\"Selected Objects\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>moveAllObjects('left'),className:\"text-gray-500 hover:text-blue-600 p-1\",title:\"Remove all\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M11 19l-7-7 7-7m8 14l-7-7 7-7\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg overflow-hidden flex-1 bg-blue-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-y-auto\",style:{height:'33vh'},children:/*#__PURE__*/_jsx(AnimatePresence,{children:selectedObjects.length>0?selectedObjects.map(objName=>{const obj=metadata.find(o=>o.name===objName);if(!obj)return null;return/*#__PURE__*/_jsxs(motion.div,{layout:true,variants:itemVariants,initial:\"hidden\",animate:\"visible\",exit:\"exit\",transition:{duration:0.05},className:\"flex items-center p-3 cursor-default border-b border-blue-200 bg-blue-100 hover:bg-blue-200\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleObjectSelection(obj.name),className:\"text-blue-400 hover:text-blue-600 p-1\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl\",children:\"\\u2190\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow flex justify-end\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium\",children:obj.label}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:obj.name})]})})]},obj.name);}):/*#__PURE__*/_jsx(motion.div,{className:\"text-center py-4 text-gray-500 h-full flex items-center justify-center\",initial:{opacity:0},animate:{opacity:1},exit:{opacity:0},children:\"Select objects using arrows\"})})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex justify-end\",children:[\" \",/*#__PURE__*/_jsxs(\"button\",{onClick:handleNextStep,disabled:selectedObjects.length===0,className:\"px-6 py-2 rounded-lg font-medium \".concat(selectedObjects.length===0?'bg-gray-300 text-gray-500 cursor-not-allowed':'bg-blue-600 text-white hover:bg-blue-700',\" transition-colors\"),children:[\"Next\",/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4 ml-2 inline\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M9 5l7 7-7 7\"})})]})]})]}),step===2&&/*#__PURE__*/// Step 2: Select Fields\n_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold mb-4 text-gray-700\",children:\"Step 2: Select Fields\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[\" \",/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Select Object:\"}),/*#__PURE__*/_jsx(\"select\",{value:currentObject,onChange:handleObjectChange,className:\"w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\",children:selectedObjects.map(obj=>/*#__PURE__*/_jsx(\"option\",{value:obj,children:obj},obj))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search fields...\",value:fieldSearch,onChange:e=>setFieldSearch(e.target.value),className:\"w-full p-2 pl-10 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"}),/*#__PURE__*/_jsx(\"svg\",{className:\"absolute left-3 top-3 h-4 w-4 text-gray-400\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-stretch gap-4\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-700\",children:\"Available Fields\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>moveAllFields('right'),className:\"text-gray-500 hover:text-blue-600 p-1\",title:\"Add all\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M13 5l7 7-7 7M5 5l7 7-7 7\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg overflow-hidden flex-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-y-auto\",style:{height:'33vh'},children:filteredFields.length>0?/*#__PURE__*/_jsx(AnimatePresence,{children:filteredFields.filter(field=>!(selectedFields[currentObject]||[]).includes(field.name)).map(field=>/*#__PURE__*/_jsxs(motion.div,{layout:true,variants:itemVariants,initial:\"hidden\",animate:\"visible\",exit:\"exit\",transition:{duration:0.05},className:\"flex items-center p-3 cursor-default hover:bg-gray-50 border-b\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow flex items-center\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium\",children:[field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:field.name}),field.type&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[\"Type: \",field.type]})]})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleFieldSelection(field.name),className:\"text-gray-400 hover:text-blue-600 p-1\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl\",children:\"\\u2192\"})})]},field.name))}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4 text-gray-500 h-full flex items-center justify-center\",children:fieldSearch?'No matching fields found':'No fields available'})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 flex flex-col\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-medium text-gray-700\",children:\"Selected Fields\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>moveAllFields('left'),className:\"text-gray-500 hover:text-blue-600 p-1\",title:\"Remove all\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M11 19l-7-7 7-7m8 14l-7-7 7-7\"})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"border rounded-lg overflow-hidden flex-1 bg-blue-50\",children:/*#__PURE__*/_jsx(\"div\",{className:\"overflow-y-auto\",style:{height:'33vh'},children:(selectedFields[currentObject]||[]).length>0?/*#__PURE__*/_jsx(AnimatePresence,{children:(selectedFields[currentObject]||[]).map(fieldName=>{var _fieldsData$currentOb2;const field=(_fieldsData$currentOb2=fieldsData[currentObject])===null||_fieldsData$currentOb2===void 0?void 0:_fieldsData$currentOb2.find(f=>f.name===fieldName);if(!field)return null;return/*#__PURE__*/_jsxs(motion.div,{layout:true,variants:itemVariants,initial:\"hidden\",animate:\"visible\",exit:\"exit\",transition:{duration:0.05},className:\"flex items-center p-3 cursor-default hover:bg-blue-100 border-b border-blue-200\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleFieldSelection(field.name),className:\"text-blue-400 hover:text-blue-600 p-1\",children:/*#__PURE__*/_jsx(\"span\",{className:\"text-2xl\",children:\"\\u2190\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"flex-grow flex justify-end\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"font-medium\",children:[field.label,field.required&&/*#__PURE__*/_jsx(\"span\",{className:\"text-red-500 ml-1\",children:\"*\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-500\",children:field.name}),field.type&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[\"Type: \",field.type]})]})})]},field.name);})}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-4 text-gray-500 h-full flex items-center justify-center\",children:\"Select fields using arrows\"})})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 flex justify-between\",children:[\" \",/*#__PURE__*/_jsxs(\"button\",{onClick:()=>{setError('');setStep(1);},className:\"px-6 py-2 rounded-lg font-medium bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors\",children:[/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4 mr-2 inline\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M15 19l-7-7 7-7\"})}),\"Back\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:handleSubmit,className:\"px-6 py-2 rounded-lg font-medium bg-green-600 text-white hover:bg-green-700 transition-colors\",children:[\"Finish\",/*#__PURE__*/_jsx(\"svg\",{className:\"w-4 h-4 ml-2 inline\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"2\",d:\"M5 13l4 4L19 7\"})})]})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border-t flex justify-center\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full \".concat(step===1?'bg-blue-600':'bg-gray-300')}),/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded-full \".concat(step===2?'bg-blue-600':'bg-gray-300')})]})]})]})]});};export default/*#__PURE__*/React.memo(CreateFormWizard);// Export the memoized component","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","useNavigate","motion","AnimatePresence","FormName","jsx","_jsx","jsxs","_jsxs","itemVariants","hidden","opacity","scale","y","visible","exit","CreateFormWizard","step","setStep","selectedObjects","setSelectedObjects","metadata","setMetadata","fieldsData","setFieldsData","selectedFields","setSelectedFields","currentObject","setCurrentObject","error","setError","isLoading","setIsLoading","objectSearch","setObjectSearch","fieldSearch","setFieldSearch","accessToken","setAccessToken","isFormNameOpen","setIsFormNameOpen","navigate","filteredMetadata","list","Array","isArray","filter","obj","name","toLowerCase","includes","label","filteredFields","_fieldsData$currentOb","field","fetchAccessToken","userId","instanceUrl","response","fetch","process","env","REACT_APP_GET_ACCESS_TOKEN_URL","method","headers","body","JSON","stringify","data","json","ok","Error","access_token","console","message","fetchMetadata","sessionStorage","getItem","token","cleanedInstanceUrl","replace","metadataResponse","REACT_APP_FETCH_METADATA_URL","Authorization","concat","metadataData","parse","err","fetchFieldsForObject","objectName","REACT_APP_FETCH_FIELDS_URL","fields","prev","_objectSpread","toggleObjectSelection","updatedFields","moveAllObjects","direction","availableObjects","map","toggleFieldSelection","fieldName","find","f","referenceTo","length","referencedObject","currentSelected","required","moveAllFields","availableFields","fieldsWithReferences","join","requiredFields","handleNextStep","fieldsMap","initialSelectedFields","fieldPromises","results","Promise","all","forEach","_ref","handleObjectChange","e","target","value","handleSubmit","_fieldsData$obj","selected","missingRequired","closeWizard","onClose","id","type","heading","alignment","className","children","onClick","fill","viewBox","fillRule","d","clipRule","placeholder","onChange","stroke","strokeLinecap","strokeLinejoin","strokeWidth","title","style","height","div","layout","variants","initial","animate","transition","duration","objName","o","disabled","_fieldsData$currentOb2","memo"],"sources":["C:/Users/MVclouds/Desktop/QuickForm/Merged Mapping QF/QuickForm/QuickForm-Romit-Kajal-Merge/quick-form-app/src/components/create-form-wizard/createFormWizard.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport FormName from './FormName';\r\n\r\nconst itemVariants = {\r\n  hidden: { opacity: 0, scale: 0.95, y: 10 }, // Animation variant for hidden state\r\n  visible: { opacity: 1, scale: 1, y: 0 }, // Animation variant for visible state\r\n  exit: { opacity: 0, scale: 0.95, y: -10 }, // Animation variant for exit state\r\n};\r\n\r\nconst CreateFormWizard = () => {\r\n  const [step, setStep] = useState(1); // State for tracking current step (1 or 2)\r\n  const [selectedObjects, setSelectedObjects] = useState([]); // State for storing selected object names\r\n  const [metadata, setMetadata] = useState([]); // State for storing metadata (list of objects)\r\n  const [fieldsData, setFieldsData] = useState({}); // State for storing fields data for each object\r\n  const [selectedFields, setSelectedFields] = useState({}); // State for storing selected fields for each object\r\n  const [currentObject, setCurrentObject] = useState(''); // State for tracking the currently selected object in Step 2\r\n  const [error, setError] = useState(''); // State for storing error messages\r\n  const [isLoading, setIsLoading] = useState(false); // State for tracking loading status\r\n  const [objectSearch, setObjectSearch] = useState(''); // State for object search input\r\n  const [fieldSearch, setFieldSearch] = useState(''); // State for field search input\r\n  const [accessToken, setAccessToken] = useState(null); // State for storing access token\r\n  const [isFormNameOpen, setIsFormNameOpen] = useState(false);\r\n  const navigate = useNavigate(); // Hook for navigation\r\n\r\n  // Memoize filtered metadata based on search input\r\n  const filteredMetadata = useMemo(() => {\r\n    const list = Array.isArray(metadata) ? metadata : [];\r\n    return list.filter(\r\n      (obj) =>\r\n        obj.name.toLowerCase().includes(objectSearch.toLowerCase()) ||\r\n        obj.label.toLowerCase().includes(objectSearch.toLowerCase())\r\n    );\r\n  }, [metadata, objectSearch]);\r\n  // Memoize filtered fields based on search input for the current object\r\n  const filteredFields = useMemo(() => {\r\n    return (\r\n      fieldsData[currentObject]?.filter( // Filter fields based on search\r\n        (field) =>\r\n          field.name.toLowerCase().includes(fieldSearch.toLowerCase()) || // Filter by field name\r\n          field.label.toLowerCase().includes(fieldSearch.toLowerCase()) // Filter by field label\r\n      ) || [] // Return empty array if no fields exist\r\n    );\r\n  }, [fieldsData, currentObject, fieldSearch]); // Dependencies for memoization\r\n\r\n  // Function to fetch access token from Lambda\r\n  const fetchAccessToken = async (userId, instanceUrl) => {\r\n    try {\r\n      const response = await fetch(process.env.REACT_APP_GET_ACCESS_TOKEN_URL, { // Fetch token from Lambda\r\n        method: 'POST', // HTTP method\r\n        headers: {\r\n          'Content-Type': 'application/json', // Request content type\r\n        },\r\n        body: JSON.stringify({\r\n          userId, // User ID for token request\r\n          instanceUrl, // Instance URL for token request\r\n        }),\r\n      });\r\n\r\n      const data = await response.json(); // Parse response JSON\r\n\r\n      if (!response.ok) { // Check if response is not OK\r\n        throw new Error(data.error || 'Failed to fetch access token'); // Throw error if token fetch fails\r\n      }\r\n\r\n      setAccessToken(data.access_token); // Store access token in state\r\n      return data.access_token; // Return the access token\r\n    } catch (error) {\r\n      console.error('Error fetching access token:', error); // Log error to console\r\n      setError('Error fetching access token: ' + error.message); // Set error message in state\r\n      throw error; // Rethrow error for further handling\r\n    }\r\n  };\r\n\r\n  // Fetch metadata when component mounts\r\n  useEffect(() => {\r\n    const fetchMetadata = async () => {\r\n      setIsLoading(true); // Set loading state to true\r\n      try {\r\n        const userId = sessionStorage.getItem('userId'); // Get user ID from session storage\r\n        const instanceUrl = sessionStorage.getItem('instanceUrl'); // Get instance URL from session storage\r\n\r\n        if (!userId || !instanceUrl) { // Check if user is authenticated\r\n          throw new Error('User not authenticated'); // Throw error if user is not authenticated\r\n        }\r\n\r\n        const token = await fetchAccessToken(userId, instanceUrl); // Fetch access token\r\n        const cleanedInstanceUrl = instanceUrl.replace(/https?:\\/\\//, ''); // Clean instance URL by removing protocol\r\n\r\n        const metadataResponse = await fetch(process.env.REACT_APP_FETCH_METADATA_URL, { // Fetch metadata from Lambda\r\n          method: 'POST', // HTTP method\r\n          headers: {\r\n            'Content-Type': 'application/json', // Request content type\r\n            Authorization: `Bearer ${token}`, // Authorization header with token\r\n          },\r\n          body: JSON.stringify({\r\n            userId, // User ID for metadata request\r\n            instanceUrl: cleanedInstanceUrl, // Cleaned instance URL for metadata request\r\n          }),\r\n        });\r\n\r\n        if (!metadataResponse.ok) { // Check if response is not OK\r\n          throw new Error('Failed to fetch metadata'); // Throw error if metadata fetch fails\r\n        }\r\n        \r\n        const metadataData = await metadataResponse.json(); // Parse response JSON\r\n        \r\n        if (metadataData.metadata) { // Check if metadata exists in response\r\n          setMetadata(JSON.parse(metadataData.metadata)); // Parse and set metadata in state\r\n        } else {\r\n          setError('No metadata found for this user.'); // Set error if no metadata is found\r\n        }\r\n      } catch (err) {\r\n        console.error('Error fetching metadata:', err); // Log error to console\r\n        setError('Error fetching metadata: ' + err.message); // Set error message in state\r\n      } finally {\r\n        setIsLoading(false); // Set loading state to false\r\n      }\r\n    };\r\n\r\n    fetchMetadata(); // Call the fetchMetadata function\r\n  }, []); // Empty dependency array ensures this runs only on mount\r\n\r\n  // Fetch fields for a specific object\r\n  const fetchFieldsForObject = async (objectName) => {\r\n    if (fieldsData[objectName]) { // Check if fields for this object are already fetched\r\n      return fieldsData[objectName]; // Return cached fields\r\n    }\r\n\r\n    try {\r\n      const instanceUrl = sessionStorage.getItem('instanceUrl'); // Get instance URL from session storage\r\n      const userId = sessionStorage.getItem('userId'); // Get user ID from session storage\r\n\r\n      if (!accessToken || !instanceUrl || !userId) { // Check if user is authenticated\r\n        throw new Error('User not authenticated or instance URL missing'); // Throw error if not authenticated\r\n      }\r\n\r\n      const cleanedInstanceUrl = instanceUrl.replace(/https?:\\/\\//, ''); // Clean instance URL by removing protocol\r\n\r\n      const response = await fetch(process.env.REACT_APP_FETCH_FIELDS_URL, { // Fetch fields from Lambda\r\n        method: 'POST', // HTTP method\r\n        headers: {\r\n          'Content-Type': 'application/json', // Request content type\r\n          Authorization: `Bearer ${accessToken}`, // Authorization header with token\r\n        },\r\n        body: JSON.stringify({\r\n          userId, // User ID for fields request\r\n          instanceUrl: cleanedInstanceUrl, // Cleaned instance URL for fields request\r\n          objectName, // Object name for which fields are fetched\r\n          access_token: accessToken, // Access token for fields request\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) { // Check if response is not OK\r\n        throw new Error(`Failed to fetch fields for ${objectName}`); // Throw error if fields fetch fails\r\n      }\r\n\r\n      const data = await response.json(); // Parse response JSON\r\n\r\n      const fields = data.fields || []; // Extract fields or default to empty array\r\n      setFieldsData((prev) => ({ ...prev, [objectName]: fields })); // Update fieldsData state with new fields\r\n      return fields; // Return the fetched fields\r\n    } catch (error) {\r\n      console.error(`Error fetching fields for ${objectName}:`, error); // Log error to console\r\n      setError(`Error fetching fields for ${objectName}: ${error.message}`); // Set error message in state\r\n      return []; // Return empty array on error\r\n    }\r\n  };\r\n\r\n  // Toggle object selection in Step 1\r\n  const toggleObjectSelection = useCallback((objectName) => {\r\n    setError(''); // Clear any existing error\r\n    if (selectedObjects.includes(objectName)) { // Check if object is already selected\r\n      setSelectedObjects(selectedObjects.filter((obj) => obj !== objectName)); // Remove object from selected list\r\n      const updatedFields = { ...selectedFields }; // Copy current selected fields\r\n      delete updatedFields[objectName]; // Remove fields for the deselected object\r\n      setSelectedFields(updatedFields); // Update selected fields state\r\n    } else {\r\n      setSelectedObjects([...selectedObjects, objectName]); // Add object to selected list\r\n    }\r\n  }, [selectedObjects, selectedFields]); // Dependencies for useCallback\r\n\r\n  // Move all objects between available and selected lists\r\n  const moveAllObjects = useCallback((direction) => {\r\n    if (direction === 'right') { // Check if moving all to selected\r\n      const availableObjects = filteredMetadata\r\n        .filter((obj) => !selectedObjects.includes(obj.name)) // Get all unselected objects\r\n        .map((obj) => obj.name); // Map to object names\r\n      setSelectedObjects([...selectedObjects, ...availableObjects]); // Add all to selected list\r\n    } else {\r\n      setSelectedObjects([]); // Clear selected objects\r\n      setSelectedFields({}); // Clear selected fields\r\n    }\r\n  }, [filteredMetadata, selectedObjects]); // Dependencies for useCallback\r\n\r\n  // Toggle field selection in Step 2\r\n  const toggleFieldSelection = useCallback((fieldName) => {\r\n    setError(''); // Clear any existing error\r\n    const field = fieldsData[currentObject].find((f) => f.name === fieldName); // Find the field in fields data\r\n\r\n    if (field.referenceTo && field.referenceTo.length > 0) { // Check if field has a reference\r\n      const referencedObject = field.referenceTo[0]; // Get the referenced object\r\n      if (!selectedObjects.includes(referencedObject)) { // Check if referenced object is selected\r\n        setError(\r\n          `Cannot select ${field.name} on ${currentObject} because ${referencedObject} object is not selected.` // Set error if referenced object is not selected\r\n        );\r\n        return; // Exit function\r\n      }\r\n    }\r\n\r\n    const currentSelected = selectedFields[currentObject] || []; // Get currently selected fields for the object\r\n\r\n    if (currentSelected.includes(fieldName)) { // Check if field is already selected\r\n      if (field.required) { // Check if field is required\r\n        setError(`Cannot remove ${field.name} from selected fields because it is required.`); // Set error if required field\r\n        return; // Exit function\r\n      }\r\n      setSelectedFields({\r\n        ...selectedFields,\r\n        [currentObject]: currentSelected.filter((f) => f !== fieldName), // Remove field from selected list\r\n      });\r\n    } else {\r\n      setSelectedFields({\r\n        ...selectedFields,\r\n        [currentObject]: [...currentSelected, fieldName], // Add field to selected list\r\n      });\r\n    }\r\n  }, [fieldsData, currentObject, selectedObjects, selectedFields]); // Dependencies for useCallback\r\n\r\n  // Move all fields between available and selected lists\r\n  const moveAllFields = useCallback((direction) => {\r\n    if (!currentObject || !fieldsData[currentObject]) return; // Exit if no current object or fields data\r\n\r\n    if (direction === 'right') { // Check if moving all to selected\r\n      const availableFields = filteredFields\r\n        .filter((field) => !(selectedFields[currentObject] || []).includes(field.name)) // Get all unselected fields\r\n        .map((field) => field.name); // Map to field names\r\n\r\n      // Check for referenced objects\r\n      const fieldsWithReferences = fieldsData[currentObject]\r\n        .filter((field) => field.referenceTo && field.referenceTo.length > 0) // Filter fields with references\r\n        .filter((field) => availableFields.includes(field.name)) // Filter fields that are available\r\n        .filter((field) => !selectedObjects.includes(field.referenceTo[0])); // Filter fields with unselected referenced objects\r\n\r\n      if (fieldsWithReferences.length > 0) { // Check if there are fields with references\r\n        setError(\r\n          `Cannot select ${fieldsWithReferences.map((f) => f.name).join(', ')} because referenced objects are not selected.` // Set error if referenced objects are not selected\r\n        );\r\n        return; // Exit function\r\n      }\r\n\r\n      setSelectedFields({\r\n        ...selectedFields,\r\n        [currentObject]: [...(selectedFields[currentObject] || []), ...availableFields], // Add all fields to selected list\r\n      });\r\n    } else {\r\n      // Only remove non-required fields\r\n      const requiredFields = fieldsData[currentObject]\r\n        .filter((field) => field.required) // Filter required fields\r\n        .map((field) => field.name); // Map to field names\r\n\r\n      setSelectedFields({\r\n        ...selectedFields,\r\n        [currentObject]: requiredFields, // Keep only required fields in selected list\r\n      });\r\n    }\r\n  }, [currentObject, fieldsData, filteredFields, selectedFields, selectedObjects]); // Dependencies for useCallback\r\n\r\n  // Handle navigation from Step 1 to Step 2\r\n  const handleNextStep = async () => {\r\n    setError(''); // Clear any existing error\r\n    if (selectedObjects.length === 0) { // Check if any objects are selected\r\n      setError('Please select at least one object.'); // Set error if no objects selected\r\n      return; // Exit function\r\n    }\r\n\r\n    setIsLoading(true); // Set loading state to true\r\n    try {\r\n      const fieldsMap = {}; // Initialize fields map\r\n      const initialSelectedFields = {}; // Initialize selected fields map\r\n\r\n      // Fetch fields for all objects in parallel\r\n      const fieldPromises = selectedObjects.map(async (obj) => {\r\n        const fields = await fetchFieldsForObject(obj); // Fetch fields for each object\r\n        return { obj, fields }; // Return object and its fields\r\n      });\r\n\r\n      const results = await Promise.all(fieldPromises); // Wait for all field fetches to complete\r\n\r\n      // Process the results\r\n      results.forEach(({ obj, fields }) => {\r\n        fieldsMap[obj] = fields; // Add fields to fields map\r\n        const requiredFields = fields.filter((field) => field.required).map((field) => field.name); // Get required fields\r\n        initialSelectedFields[obj] = requiredFields; // Set required fields as initially selected\r\n      });\r\n\r\n      setFieldsData(fieldsMap); // Update fields data state\r\n      setCurrentObject(selectedObjects[0]); // Set first selected object as current\r\n      setSelectedFields(initialSelectedFields); // Update selected fields state\r\n      setStep(2); // Move to Step 2\r\n    } catch (error) {\r\n      setError('Error preparing fields: ' + error.message); // Set error if field fetching fails\r\n    } finally {\r\n      setIsLoading(false); // Set loading state to false\r\n    }\r\n  };\r\n\r\n  // Handle object dropdown change in Step 2\r\n  const handleObjectChange = useCallback((e) => {\r\n    setCurrentObject(e.target.value); // Update current object based on dropdown selection\r\n    setError(''); // Clear any existing error\r\n  }, []); // Dependencies for useCallback\r\n\r\n  // Handle form submission after Step 2\r\n  const handleSubmit = useCallback(() => {\r\n    setError(''); // Clear any existing error\r\n    for (const obj of selectedObjects) { // Iterate through selected objects\r\n      if (!selectedFields[obj] || selectedFields[obj].length === 0) { // Check if fields are selected for the object\r\n        setError(`Please select at least one field for ${obj}.`); // Set error if no fields selected\r\n        return; // Exit function\r\n      }\r\n      const requiredFields = fieldsData[obj]?.filter((field) => field.required) || []; // Get required fields for the object\r\n      const selected = selectedFields[obj] || []; // Get selected fields for the object\r\n      const missingRequired = requiredFields.filter((field) => !selected.includes(field.name)); // Find missing required fields\r\n      if (missingRequired.length > 0) { // Check if any required fields are missing\r\n        setError(\r\n          `Please select all required fields for ${obj}: ${missingRequired\r\n            .map((f) => f.label)\r\n            .join(', ')}` // Set error for missing required fields\r\n        );\r\n        return; // Exit function\r\n      }\r\n    }\r\n\r\n    setIsFormNameOpen(true); \r\n  }, [selectedObjects, selectedFields, fieldsData, navigate]); // Dependencies for useCallback\r\n\r\n  // Handle closing the wizard\r\n  const closeWizard = useCallback(() => {\r\n    navigate('/home'); // Navigate to home page when wizard is closed\r\n  }, [navigate]); // Dependencies for useCallback\r\n\r\n  // Main JSX return statement with comments for major sections\r\n  if (isFormNameOpen) {\r\n    return (\r\n      <FormName\r\n        onClose={() => setIsFormNameOpen(false)}\r\n        fields={[{ id: 'default-header', type: 'header', heading: 'Contact Form', alignment: 'center' }]}\r\n        selectedObjects={selectedObjects} // Pass selectedObjects\r\n        selectedFields={selectedFields} // Pass selectedFields\r\n        fieldsData={fieldsData} // Pass fieldsData\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-gray-600 bg-opacity-50 flex items-center justify-center p-4 z-50\"> {/* Overlay for modal */}\r\n      {isLoading && ( // Loading overlay section\r\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black bg-opacity-30 z-50\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-blue-500\"></div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"bg-white rounded-lg shadow-xl w-full max-w-4xl max-h-[90vh] flex flex-col\"> {/* Wizard container */}\r\n        <div className=\"flex justify-between items-center p-6 border-b\"> {/* Header section */}\r\n          <h2 className=\"text-2xl font-bold text-gray-800\">Create Form Wizard</h2>\r\n          <button\r\n            onClick={closeWizard}\r\n            className=\"text-gray-500 hover:text-gray-700 text-xl\"\r\n            aria-label=\"Close\"\r\n          >\r\n            ×\r\n          </button>\r\n        </div>\r\n\r\n        {error && ( // Error message section\r\n          <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4\">\r\n            <div className=\"flex items-center\">\r\n              <svg className=\"w-5 h-5 mr-2\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                <path\r\n                  fillRule=\"evenodd\"\r\n                  d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2h-1V9z\"\r\n                  clipRule=\"evenodd\"\r\n                />\r\n              </svg>\r\n              <span>{error}</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"flex-grow overflow-auto p-6\"> {/* Main content area */}\r\n          {step === 1 && ( // Step 1: Select Objects\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-700\">Step 1: Select Objects</h3>\r\n\r\n              <div className=\"mb-4\"> {/* Object search section */}\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search objects...\"\r\n                    value={objectSearch}\r\n                    onChange={(e) => setObjectSearch(e.target.value)}\r\n                    className=\"w-full p-2 pl-10 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                  <svg\r\n                    className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-stretch gap-4\"> {/* Object selection layout */}\r\n                <div className=\"flex-1 flex flex-col\"> {/* Available objects section */}\r\n                  <div className=\"flex justify-between items-center mb-2\">\r\n                    <h4 className=\"font-medium text-gray-700\">Available Objects</h4>\r\n                    <button\r\n                      onClick={() => moveAllObjects('right')}\r\n                      className=\"text-gray-500 hover:text-blue-600 p-1\"\r\n                      title=\"Add all\"\r\n                    >\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"border rounded-lg overflow-hidden flex-1\">\r\n                    <div className=\"overflow-y-auto\" style={{ height: '33vh' }}>\r\n                      <AnimatePresence>\r\n                        {filteredMetadata\r\n                          .filter((obj) => !selectedObjects.includes(obj.name))\r\n                          .map((obj) => (\r\n                            <motion.div\r\n                              key={obj.name}\r\n                              layout\r\n                              variants={itemVariants}\r\n                              initial=\"hidden\"\r\n                              animate=\"visible\"\r\n                              exit=\"exit\"\r\n                              transition={{ duration: 0.05 }}\r\n                              className=\"flex items-center p-3 cursor-default hover:bg-gray-50 border-b bg-white\"\r\n                            >\r\n                              <div className=\"flex-grow flex items-center\">\r\n                                <div>\r\n                                  <div className=\"font-medium\">{obj.label}</div>\r\n                                  <div className=\"text-sm text-gray-500\">{obj.name}</div>\r\n                                </div>\r\n                              </div>\r\n                              <button\r\n                                onClick={() => toggleObjectSelection(obj.name)}\r\n                                className=\"text-gray-400 hover:text-blue-600 p-1\"\r\n                              >\r\n                                <span className=\"text-2xl\">→</span>\r\n                              </button>\r\n                            </motion.div>\r\n                          ))}\r\n                      </AnimatePresence>\r\n                      {filteredMetadata.length === 0 && (\r\n                        <div className=\"text-center py-4 text-gray-500 h-full flex items-center justify-center\">\r\n                          No objects available\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex-1 flex flex-col\"> {/* Selected objects section */}\r\n                  <div className=\"flex justify-between items-center mb-2\">\r\n                    <h4 className=\"font-medium text-gray-700\">Selected Objects</h4>\r\n                    <button\r\n                      onClick={() => moveAllObjects('left')}\r\n                      className=\"text-gray-500 hover:text-blue-600 p-1\"\r\n                      title=\"Remove all\"\r\n                    >\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"border rounded-lg overflow-hidden flex-1 bg-blue-50\">\r\n                    <div className=\"overflow-y-auto\" style={{ height: '33vh' }}>\r\n                      <AnimatePresence>\r\n                        {selectedObjects.length > 0 ? (\r\n                          selectedObjects.map((objName) => {\r\n                            const obj = metadata.find((o) => o.name === objName);\r\n                            if (!obj) return null;\r\n                            return (\r\n                              <motion.div\r\n                                key={obj.name}\r\n                                layout\r\n                                variants={itemVariants}\r\n                                initial=\"hidden\"\r\n                                animate=\"visible\"\r\n                                exit=\"exit\"\r\n                                transition={{ duration: 0.05 }}\r\n                                className=\"flex items-center p-3 cursor-default border-b border-blue-200 bg-blue-100 hover:bg-blue-200\"\r\n                              >\r\n                                <button\r\n                                  onClick={() => toggleObjectSelection(obj.name)}\r\n                                  className=\"text-blue-400 hover:text-blue-600 p-1\"\r\n                                >\r\n                                  <span className=\"text-2xl\">←</span>\r\n                                </button>\r\n                                <div className=\"flex-grow flex justify-end\">\r\n                                  <div>\r\n                                    <div className=\"font-medium\">{obj.label}</div>\r\n                                    <div className=\"text-sm text-gray-500\">{obj.name}</div>\r\n                                  </div>\r\n                                </div>\r\n                              </motion.div>\r\n                            );\r\n                          })\r\n                        ) : (\r\n                          <motion.div\r\n                            className=\"text-center py-4 text-gray-500 h-full flex items-center justify-center\"\r\n                            initial={{ opacity: 0 }}\r\n                            animate={{ opacity: 1 }}\r\n                            exit={{ opacity: 0 }}\r\n                          >\r\n                            Select objects using arrows\r\n                          </motion.div>\r\n                        )}\r\n                      </AnimatePresence>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-6 flex justify-end\"> {/* Navigation buttons section */}\r\n                <button\r\n                  onClick={handleNextStep}\r\n                  disabled={selectedObjects.length === 0}\r\n                  className={`px-6 py-2 rounded-lg font-medium ${\r\n                    selectedObjects.length === 0\r\n                      ? 'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                      : 'bg-blue-600 text-white hover:bg-blue-700'\r\n                  } transition-colors`}\r\n                >\r\n                  Next\r\n                  <svg\r\n                    className=\"w-4 h-4 ml-2 inline\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M9 5l7 7-7 7\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {step === 2 && ( // Step 2: Select Fields\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold mb-4 text-gray-700\">Step 2: Select Fields</h3>\r\n\r\n              <div className=\"mb-4\"> {/* Object dropdown section */}\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n                  Select Object:\r\n                </label>\r\n                <select\r\n                  value={currentObject}\r\n                  onChange={handleObjectChange}\r\n                  className=\"w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  {selectedObjects.map((obj) => (\r\n                    <option key={obj} value={obj}>\r\n                      {obj}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"mb-4\"> {/* Field search section */}\r\n                <div className=\"relative\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Search fields...\"\r\n                    value={fieldSearch}\r\n                    onChange={(e) => setFieldSearch(e.target.value)}\r\n                    className=\"w-full p-2 pl-10 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                  <svg\r\n                    className=\"absolute left-3 top-3 h-4 w-4 text-gray-400\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                    />\r\n                  </svg>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-stretch gap-4\"> {/* Field selection layout */}\r\n                <div className=\"flex-1 flex flex-col\"> {/* Available fields section */}\r\n                  <div className=\"flex justify-between items-center mb-2\">\r\n                    <h4 className=\"font-medium text-gray-700\">Available Fields</h4>\r\n                    <button\r\n                      onClick={() => moveAllFields('right')}\r\n                      className=\"text-gray-500 hover:text-blue-600 p-1\"\r\n                      title=\"Add all\"\r\n                    >\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 5l7 7-7 7M5 5l7 7-7 7\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"border rounded-lg overflow-hidden flex-1\">\r\n                    <div className=\"overflow-y-auto\" style={{ height: '33vh' }}>\r\n                      {filteredFields.length > 0 ? (\r\n                        <AnimatePresence>\r\n                          {filteredFields\r\n                            .filter(\r\n                              (field) => !(selectedFields[currentObject] || []).includes(field.name)\r\n                            )\r\n                            .map((field) => (\r\n                              <motion.div\r\n                                key={field.name}\r\n                                layout\r\n                                variants={itemVariants}\r\n                                initial=\"hidden\"\r\n                                animate=\"visible\"\r\n                                exit=\"exit\"\r\n                                transition={{ duration: 0.05 }}\r\n                                className=\"flex items-center p-3 cursor-default hover:bg-gray-50 border-b\"\r\n                              >\r\n                                <div className=\"flex-grow flex items-center\">\r\n                                  <div>\r\n                                    <div className=\"font-medium\">\r\n                                      {field.label}\r\n                                      {field.required && (\r\n                                        <span className=\"text-red-500 ml-1\">*</span>\r\n                                      )}\r\n                                    </div>\r\n                                    <div className=\"text-sm text-gray-500\">{field.name}</div>\r\n                                    {field.type && (\r\n                                      <div className=\"text-xs text-gray-400 mt-1\">\r\n                                        Type: {field.type}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                                <button\r\n                                  onClick={() => toggleFieldSelection(field.name)}\r\n                                  className=\"text-gray-400 hover:text-blue-600 p-1\"\r\n                                >\r\n                                  <span className=\"text-2xl\">→</span>\r\n                                </button>\r\n                              </motion.div>\r\n                            ))}\r\n                        </AnimatePresence>\r\n                      ) : (\r\n                        <div className=\"text-center py-4 text-gray-500 h-full flex items-center justify-center\">\r\n                          {fieldSearch ? 'No matching fields found' : 'No fields available'}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"flex-1 flex flex-col\"> {/* Selected fields section */}\r\n                  <div className=\"flex justify-between items-center mb-2\">\r\n                    <h4 className=\"font-medium text-gray-700\">Selected Fields</h4>\r\n                    <button\r\n                      onClick={() => moveAllFields('left')}\r\n                      className=\"text-gray-500 hover:text-blue-600 p-1\"\r\n                      title=\"Remove all\"\r\n                    >\r\n                      <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M11 19l-7-7 7-7m8 14l-7-7 7-7\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n                  <div className=\"border rounded-lg overflow-hidden flex-1 bg-blue-50\">\r\n                    <div className=\"overflow-y-auto\" style={{ height: '33vh' }}>\r\n                      {(selectedFields[currentObject] || []).length > 0 ? (\r\n                        <AnimatePresence>\r\n                          {(selectedFields[currentObject] || []).map((fieldName) => {\r\n                            const field = fieldsData[currentObject]?.find(\r\n                              (f) => f.name === fieldName\r\n                            );\r\n                            if (!field) return null;\r\n                            return (\r\n                              <motion.div\r\n                                key={field.name}\r\n                                layout\r\n                                variants={itemVariants}\r\n                                initial=\"hidden\"\r\n                                animate=\"visible\"\r\n                                exit=\"exit\"\r\n                                transition={{ duration: 0.05 }}\r\n                                className=\"flex items-center p-3 cursor-default hover:bg-blue-100 border-b border-blue-200\"\r\n                              >\r\n                                <button\r\n                                  onClick={() => toggleFieldSelection(field.name)}\r\n                                  className=\"text-blue-400 hover:text-blue-600 p-1\"\r\n                                >\r\n                                  <span className=\"text-2xl\">←</span>\r\n                                </button>\r\n                                <div className=\"flex-grow flex justify-end\">\r\n                                  <div>\r\n                                    <div className=\"font-medium\">\r\n                                      {field.label}\r\n                                      {field.required && (\r\n                                        <span className=\"text-red-500 ml-1\">*</span>\r\n                                      )}\r\n                                    </div>\r\n                                    <div className=\"text-sm text-gray-500\">{field.name}</div>\r\n                                    {field.type && (\r\n                                      <div className=\"text-xs text-gray-400 mt-1\">\r\n                                        Type: {field.type}\r\n                                      </div>\r\n                                    )}\r\n                                  </div>\r\n                                </div>\r\n                              </motion.div>\r\n                            );\r\n                          })}\r\n                        </AnimatePresence>\r\n                      ) : (\r\n                        <div className=\"text-center py-4 text-gray-500 h-full flex items-center justify-center\">\r\n                          Select fields using arrows\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-6 flex justify-between\"> {/* Navigation buttons section */}\r\n                <button\r\n                  onClick={() => {\r\n                    setError('');\r\n                    setStep(1);\r\n                  }}\r\n                  className=\"px-6 py-2 rounded-lg font-medium bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors\"\r\n                >\r\n                  <svg\r\n                    className=\"w-4 h-4 mr-2 inline\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M15 19l-7-7 7-7\"\r\n                    />\r\n                  </svg>\r\n                  Back\r\n                </button>\r\n                <button\r\n                  onClick={handleSubmit}\r\n                  className=\"px-6 py-2 rounded-lg font-medium bg-green-600 text-white hover:bg-green-700 transition-colors\"\r\n                >\r\n                  Finish\r\n                  <svg\r\n                    className=\"w-4 h-4 ml-2 inline\"\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    viewBox=\"0 0 24 24\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth=\"2\"\r\n                      d=\"M5 13l4 4L19 7\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"p-4 border-t flex justify-center\"> {/* Step indicator section */}\r\n          <div className=\"flex space-x-2\">\r\n            <div\r\n              className={`w-3 h-3 rounded-full ${step === 1 ? 'bg-blue-600' : 'bg-gray-300'}`}\r\n            ></div>\r\n            <div\r\n              className={`w-3 h-3 rounded-full ${step === 2 ? 'bg-blue-600' : 'bg-gray-300'}`}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(CreateFormWizard); // Export the memoized component"],"mappings":"+LAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,OAAO,CAAEC,WAAW,KAAQ,OAAO,CACxE,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,OAASC,MAAM,CAAEC,eAAe,KAAQ,eAAe,CACvD,MAAO,CAAAC,QAAQ,KAAM,YAAY,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,YAAY,CAAG,CACnBC,MAAM,CAAE,CAAEC,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,IAAI,CAAEC,CAAC,CAAE,EAAG,CAAC,CAAE;AAC5CC,OAAO,CAAE,CAAEH,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,CAAC,CAAEC,CAAC,CAAE,CAAE,CAAC,CAAE;AACzCE,IAAI,CAAE,CAAEJ,OAAO,CAAE,CAAC,CAAEC,KAAK,CAAE,IAAI,CAAEC,CAAC,CAAE,CAAC,EAAG,CAAG;AAC7C,CAAC,CAED,KAAM,CAAAG,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGrB,QAAQ,CAAC,CAAC,CAAC,CAAE;AACrC,KAAM,CAACsB,eAAe,CAAEC,kBAAkB,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC5D,KAAM,CAACwB,QAAQ,CAAEC,WAAW,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C,KAAM,CAAC0B,UAAU,CAAEC,aAAa,CAAC,CAAG3B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AAClD,KAAM,CAAC4B,cAAc,CAAEC,iBAAiB,CAAC,CAAG7B,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAE;AAC1D,KAAM,CAAC8B,aAAa,CAAEC,gBAAgB,CAAC,CAAG/B,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxD,KAAM,CAACgC,KAAK,CAAEC,QAAQ,CAAC,CAAGjC,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxC,KAAM,CAACkC,SAAS,CAAEC,YAAY,CAAC,CAAGnC,QAAQ,CAAC,KAAK,CAAC,CAAE;AACnD,KAAM,CAACoC,YAAY,CAAEC,eAAe,CAAC,CAAGrC,QAAQ,CAAC,EAAE,CAAC,CAAE;AACtD,KAAM,CAACsC,WAAW,CAAEC,cAAc,CAAC,CAAGvC,QAAQ,CAAC,EAAE,CAAC,CAAE;AACpD,KAAM,CAACwC,WAAW,CAAEC,cAAc,CAAC,CAAGzC,QAAQ,CAAC,IAAI,CAAC,CAAE;AACtD,KAAM,CAAC0C,cAAc,CAAEC,iBAAiB,CAAC,CAAG3C,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAAA4C,QAAQ,CAAGxC,WAAW,CAAC,CAAC,CAAE;AAEhC;AACA,KAAM,CAAAyC,gBAAgB,CAAG3C,OAAO,CAAC,IAAM,CACrC,KAAM,CAAA4C,IAAI,CAAGC,KAAK,CAACC,OAAO,CAACxB,QAAQ,CAAC,CAAGA,QAAQ,CAAG,EAAE,CACpD,MAAO,CAAAsB,IAAI,CAACG,MAAM,CACfC,GAAG,EACFA,GAAG,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjB,YAAY,CAACgB,WAAW,CAAC,CAAC,CAAC,EAC3DF,GAAG,CAACI,KAAK,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACjB,YAAY,CAACgB,WAAW,CAAC,CAAC,CAC/D,CAAC,CACH,CAAC,CAAE,CAAC5B,QAAQ,CAAEY,YAAY,CAAC,CAAC,CAC5B;AACA,KAAM,CAAAmB,cAAc,CAAGrD,OAAO,CAAC,IAAM,KAAAsD,qBAAA,CACnC,MACE,EAAAA,qBAAA,CAAA9B,UAAU,CAACI,aAAa,CAAC,UAAA0B,qBAAA,iBAAzBA,qBAAA,CAA2BP,MAAM,CAAE;AAChCQ,KAAK,EACJA,KAAK,CAACN,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACf,WAAW,CAACc,WAAW,CAAC,CAAC,CAAC,EAAI;AAChEK,KAAK,CAACH,KAAK,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACf,WAAW,CAACc,WAAW,CAAC,CAAC,CAAE;AAClE,CAAC,GAAI,EAAG;AAAA,CAEZ,CAAC,CAAE,CAAC1B,UAAU,CAAEI,aAAa,CAAEQ,WAAW,CAAC,CAAC,CAAE;AAE9C;AACA,KAAM,CAAAoB,gBAAgB,CAAG,KAAAA,CAAOC,MAAM,CAAEC,WAAW,GAAK,CACtD,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,8BAA8B,CAAE,CAAE;AACzEC,MAAM,CAAE,MAAM,CAAE;AAChBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAoB;AACtC,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBX,MAAM,CAAE;AACRC,WAAa;AACf,CAAC,CACH,CAAC,CAAC,CAEF,KAAM,CAAAW,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAE;AAEpC,GAAI,CAACX,QAAQ,CAACY,EAAE,CAAE,CAAE;AAClB,KAAM,IAAI,CAAAC,KAAK,CAACH,IAAI,CAACvC,KAAK,EAAI,8BAA8B,CAAC,CAAE;AACjE,CAEAS,cAAc,CAAC8B,IAAI,CAACI,YAAY,CAAC,CAAE;AACnC,MAAO,CAAAJ,IAAI,CAACI,YAAY,CAAE;AAC5B,CAAE,MAAO3C,KAAK,CAAE,CACd4C,OAAO,CAAC5C,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CAAE;AACtDC,QAAQ,CAAC,+BAA+B,CAAGD,KAAK,CAAC6C,OAAO,CAAC,CAAE;AAC3D,KAAM,CAAA7C,KAAK,CAAE;AACf,CACF,CAAC,CAED;AACA/B,SAAS,CAAC,IAAM,CACd,KAAM,CAAA6E,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC3C,YAAY,CAAC,IAAI,CAAC,CAAE;AACpB,GAAI,CACF,KAAM,CAAAwB,MAAM,CAAGoB,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAE;AACjD,KAAM,CAAApB,WAAW,CAAGmB,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,CAAE;AAE3D,GAAI,CAACrB,MAAM,EAAI,CAACC,WAAW,CAAE,CAAE;AAC7B,KAAM,IAAI,CAAAc,KAAK,CAAC,wBAAwB,CAAC,CAAE;AAC7C,CAEA,KAAM,CAAAO,KAAK,CAAG,KAAM,CAAAvB,gBAAgB,CAACC,MAAM,CAAEC,WAAW,CAAC,CAAE;AAC3D,KAAM,CAAAsB,kBAAkB,CAAGtB,WAAW,CAACuB,OAAO,CAAC,aAAa,CAAE,EAAE,CAAC,CAAE;AAEnE,KAAM,CAAAC,gBAAgB,CAAG,KAAM,CAAAtB,KAAK,CAACC,OAAO,CAACC,GAAG,CAACqB,4BAA4B,CAAE,CAAE;AAC/EnB,MAAM,CAAE,MAAM,CAAE;AAChBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAAE;AACpCmB,aAAa,WAAAC,MAAA,CAAYN,KAAK,CAAI;AACpC,CAAC,CACDb,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBX,MAAM,CAAE;AACRC,WAAW,CAAEsB,kBAAoB;AACnC,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACE,gBAAgB,CAACX,EAAE,CAAE,CAAE;AAC1B,KAAM,IAAI,CAAAC,KAAK,CAAC,0BAA0B,CAAC,CAAE;AAC/C,CAEA,KAAM,CAAAc,YAAY,CAAG,KAAM,CAAAJ,gBAAgB,CAACZ,IAAI,CAAC,CAAC,CAAE;AAEpD,GAAIgB,YAAY,CAAChE,QAAQ,CAAE,CAAE;AAC3BC,WAAW,CAAC4C,IAAI,CAACoB,KAAK,CAACD,YAAY,CAAChE,QAAQ,CAAC,CAAC,CAAE;AAClD,CAAC,IAAM,CACLS,QAAQ,CAAC,kCAAkC,CAAC,CAAE;AAChD,CACF,CAAE,MAAOyD,GAAG,CAAE,CACZd,OAAO,CAAC5C,KAAK,CAAC,0BAA0B,CAAE0D,GAAG,CAAC,CAAE;AAChDzD,QAAQ,CAAC,2BAA2B,CAAGyD,GAAG,CAACb,OAAO,CAAC,CAAE;AACvD,CAAC,OAAS,CACR1C,YAAY,CAAC,KAAK,CAAC,CAAE;AACvB,CACF,CAAC,CAED2C,aAAa,CAAC,CAAC,CAAE;AACnB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER;AACA,KAAM,CAAAa,oBAAoB,CAAG,KAAO,CAAAC,UAAU,EAAK,CACjD,GAAIlE,UAAU,CAACkE,UAAU,CAAC,CAAE,CAAE;AAC5B,MAAO,CAAAlE,UAAU,CAACkE,UAAU,CAAC,CAAE;AACjC,CAEA,GAAI,CACF,KAAM,CAAAhC,WAAW,CAAGmB,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,CAAE;AAC3D,KAAM,CAAArB,MAAM,CAAGoB,cAAc,CAACC,OAAO,CAAC,QAAQ,CAAC,CAAE;AAEjD,GAAI,CAACxC,WAAW,EAAI,CAACoB,WAAW,EAAI,CAACD,MAAM,CAAE,CAAE;AAC7C,KAAM,IAAI,CAAAe,KAAK,CAAC,gDAAgD,CAAC,CAAE;AACrE,CAEA,KAAM,CAAAQ,kBAAkB,CAAGtB,WAAW,CAACuB,OAAO,CAAC,aAAa,CAAE,EAAE,CAAC,CAAE;AAEnE,KAAM,CAAAtB,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAACC,OAAO,CAACC,GAAG,CAAC6B,0BAA0B,CAAE,CAAE;AACrE3B,MAAM,CAAE,MAAM,CAAE;AAChBC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CAAE;AACpCmB,aAAa,WAAAC,MAAA,CAAY/C,WAAW,CAAI;AAC1C,CAAC,CACD4B,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBX,MAAM,CAAE;AACRC,WAAW,CAAEsB,kBAAkB,CAAE;AACjCU,UAAU,CAAE;AACZjB,YAAY,CAAEnC,WAAa;AAC7B,CAAC,CACH,CAAC,CAAC,CAEF,GAAI,CAACqB,QAAQ,CAACY,EAAE,CAAE,CAAE;AAClB,KAAM,IAAI,CAAAC,KAAK,+BAAAa,MAAA,CAA+BK,UAAU,CAAE,CAAC,CAAE;AAC/D,CAEA,KAAM,CAAArB,IAAI,CAAG,KAAM,CAAAV,QAAQ,CAACW,IAAI,CAAC,CAAC,CAAE;AAEpC,KAAM,CAAAsB,MAAM,CAAGvB,IAAI,CAACuB,MAAM,EAAI,EAAE,CAAE;AAClCnE,aAAa,CAAEoE,IAAI,EAAAC,aAAA,CAAAA,aAAA,IAAWD,IAAI,MAAE,CAACH,UAAU,EAAGE,MAAM,EAAG,CAAC,CAAE;AAC9D,MAAO,CAAAA,MAAM,CAAE;AACjB,CAAE,MAAO9D,KAAK,CAAE,CACd4C,OAAO,CAAC5C,KAAK,8BAAAuD,MAAA,CAA8BK,UAAU,MAAK5D,KAAK,CAAC,CAAE;AAClEC,QAAQ,8BAAAsD,MAAA,CAA8BK,UAAU,OAAAL,MAAA,CAAKvD,KAAK,CAAC6C,OAAO,CAAE,CAAC,CAAE;AACvE,MAAO,EAAE,CAAE;AACb,CACF,CAAC,CAED;AACA,KAAM,CAAAoB,qBAAqB,CAAG9F,WAAW,CAAEyF,UAAU,EAAK,CACxD3D,QAAQ,CAAC,EAAE,CAAC,CAAE;AACd,GAAIX,eAAe,CAAC+B,QAAQ,CAACuC,UAAU,CAAC,CAAE,CAAE;AAC1CrE,kBAAkB,CAACD,eAAe,CAAC2B,MAAM,CAAEC,GAAG,EAAKA,GAAG,GAAK0C,UAAU,CAAC,CAAC,CAAE;AACzE,KAAM,CAAAM,aAAa,CAAAF,aAAA,IAAQpE,cAAc,CAAE,CAAE;AAC7C,MAAO,CAAAsE,aAAa,CAACN,UAAU,CAAC,CAAE;AAClC/D,iBAAiB,CAACqE,aAAa,CAAC,CAAE;AACpC,CAAC,IAAM,CACL3E,kBAAkB,CAAC,CAAC,GAAGD,eAAe,CAAEsE,UAAU,CAAC,CAAC,CAAE;AACxD,CACF,CAAC,CAAE,CAACtE,eAAe,CAAEM,cAAc,CAAC,CAAC,CAAE;AAEvC;AACA,KAAM,CAAAuE,cAAc,CAAGhG,WAAW,CAAEiG,SAAS,EAAK,CAChD,GAAIA,SAAS,GAAK,OAAO,CAAE,CAAE;AAC3B,KAAM,CAAAC,gBAAgB,CAAGxD,gBAAgB,CACtCI,MAAM,CAAEC,GAAG,EAAK,CAAC5B,eAAe,CAAC+B,QAAQ,CAACH,GAAG,CAACC,IAAI,CAAC,CAAE;AAAA,CACrDmD,GAAG,CAAEpD,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAE;AAC3B5B,kBAAkB,CAAC,CAAC,GAAGD,eAAe,CAAE,GAAG+E,gBAAgB,CAAC,CAAC,CAAE;AACjE,CAAC,IAAM,CACL9E,kBAAkB,CAAC,EAAE,CAAC,CAAE;AACxBM,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAE;AACzB,CACF,CAAC,CAAE,CAACgB,gBAAgB,CAAEvB,eAAe,CAAC,CAAC,CAAE;AAEzC;AACA,KAAM,CAAAiF,oBAAoB,CAAGpG,WAAW,CAAEqG,SAAS,EAAK,CACtDvE,QAAQ,CAAC,EAAE,CAAC,CAAE;AACd,KAAM,CAAAwB,KAAK,CAAG/B,UAAU,CAACI,aAAa,CAAC,CAAC2E,IAAI,CAAEC,CAAC,EAAKA,CAAC,CAACvD,IAAI,GAAKqD,SAAS,CAAC,CAAE;AAE3E,GAAI/C,KAAK,CAACkD,WAAW,EAAIlD,KAAK,CAACkD,WAAW,CAACC,MAAM,CAAG,CAAC,CAAE,CAAE;AACvD,KAAM,CAAAC,gBAAgB,CAAGpD,KAAK,CAACkD,WAAW,CAAC,CAAC,CAAC,CAAE;AAC/C,GAAI,CAACrF,eAAe,CAAC+B,QAAQ,CAACwD,gBAAgB,CAAC,CAAE,CAAE;AACjD5E,QAAQ,kBAAAsD,MAAA,CACW9B,KAAK,CAACN,IAAI,SAAAoC,MAAA,CAAOzD,aAAa,cAAAyD,MAAA,CAAYsB,gBAAgB,4BAA2B;AACxG,CAAC,CACD,OAAQ;AACV,CACF,CAEA,KAAM,CAAAC,eAAe,CAAGlF,cAAc,CAACE,aAAa,CAAC,EAAI,EAAE,CAAE;AAE7D,GAAIgF,eAAe,CAACzD,QAAQ,CAACmD,SAAS,CAAC,CAAE,CAAE;AACzC,GAAI/C,KAAK,CAACsD,QAAQ,CAAE,CAAE;AACpB9E,QAAQ,kBAAAsD,MAAA,CAAkB9B,KAAK,CAACN,IAAI,iDAA+C,CAAC,CAAE;AACtF,OAAQ;AACV,CACAtB,iBAAiB,CAAAmE,aAAA,CAAAA,aAAA,IACZpE,cAAc,MACjB,CAACE,aAAa,EAAGgF,eAAe,CAAC7D,MAAM,CAAEyD,CAAC,EAAKA,CAAC,GAAKF,SAAS,CAAG;AAAA,EAClE,CAAC,CACJ,CAAC,IAAM,CACL3E,iBAAiB,CAAAmE,aAAA,CAAAA,aAAA,IACZpE,cAAc,MACjB,CAACE,aAAa,EAAG,CAAC,GAAGgF,eAAe,CAAEN,SAAS,CAAG;AAAA,EACnD,CAAC,CACJ,CACF,CAAC,CAAE,CAAC9E,UAAU,CAAEI,aAAa,CAAER,eAAe,CAAEM,cAAc,CAAC,CAAC,CAAE;AAElE;AACA,KAAM,CAAAoF,aAAa,CAAG7G,WAAW,CAAEiG,SAAS,EAAK,CAC/C,GAAI,CAACtE,aAAa,EAAI,CAACJ,UAAU,CAACI,aAAa,CAAC,CAAE,OAAQ;AAE1D,GAAIsE,SAAS,GAAK,OAAO,CAAE,CAAE;AAC3B,KAAM,CAAAa,eAAe,CAAG1D,cAAc,CACnCN,MAAM,CAAEQ,KAAK,EAAK,CAAC,CAAC7B,cAAc,CAACE,aAAa,CAAC,EAAI,EAAE,EAAEuB,QAAQ,CAACI,KAAK,CAACN,IAAI,CAAC,CAAE;AAAA,CAC/EmD,GAAG,CAAE7C,KAAK,EAAKA,KAAK,CAACN,IAAI,CAAC,CAAE;AAE/B;AACA,KAAM,CAAA+D,oBAAoB,CAAGxF,UAAU,CAACI,aAAa,CAAC,CACnDmB,MAAM,CAAEQ,KAAK,EAAKA,KAAK,CAACkD,WAAW,EAAIlD,KAAK,CAACkD,WAAW,CAACC,MAAM,CAAG,CAAC,CAAE;AAAA,CACrE3D,MAAM,CAAEQ,KAAK,EAAKwD,eAAe,CAAC5D,QAAQ,CAACI,KAAK,CAACN,IAAI,CAAC,CAAE;AAAA,CACxDF,MAAM,CAAEQ,KAAK,EAAK,CAACnC,eAAe,CAAC+B,QAAQ,CAACI,KAAK,CAACkD,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;AAEvE,GAAIO,oBAAoB,CAACN,MAAM,CAAG,CAAC,CAAE,CAAE;AACrC3E,QAAQ,kBAAAsD,MAAA,CACW2B,oBAAoB,CAACZ,GAAG,CAAEI,CAAC,EAAKA,CAAC,CAACvD,IAAI,CAAC,CAACgE,IAAI,CAAC,IAAI,CAAC,iDAAgD;AACrH,CAAC,CACD,OAAQ;AACV,CAEAtF,iBAAiB,CAAAmE,aAAA,CAAAA,aAAA,IACZpE,cAAc,MACjB,CAACE,aAAa,EAAG,CAAC,IAAIF,cAAc,CAACE,aAAa,CAAC,EAAI,EAAE,CAAC,CAAE,GAAGmF,eAAe,CAAG;AAAA,EAClF,CAAC,CACJ,CAAC,IAAM,CACL;AACA,KAAM,CAAAG,cAAc,CAAG1F,UAAU,CAACI,aAAa,CAAC,CAC7CmB,MAAM,CAAEQ,KAAK,EAAKA,KAAK,CAACsD,QAAQ,CAAE;AAAA,CAClCT,GAAG,CAAE7C,KAAK,EAAKA,KAAK,CAACN,IAAI,CAAC,CAAE;AAE/BtB,iBAAiB,CAAAmE,aAAA,CAAAA,aAAA,IACZpE,cAAc,MACjB,CAACE,aAAa,EAAGsF,cAAgB;AAAA,EAClC,CAAC,CACJ,CACF,CAAC,CAAE,CAACtF,aAAa,CAAEJ,UAAU,CAAE6B,cAAc,CAAE3B,cAAc,CAAEN,eAAe,CAAC,CAAC,CAAE;AAElF;AACA,KAAM,CAAA+F,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjCpF,QAAQ,CAAC,EAAE,CAAC,CAAE;AACd,GAAIX,eAAe,CAACsF,MAAM,GAAK,CAAC,CAAE,CAAE;AAClC3E,QAAQ,CAAC,oCAAoC,CAAC,CAAE;AAChD,OAAQ;AACV,CAEAE,YAAY,CAAC,IAAI,CAAC,CAAE;AACpB,GAAI,CACF,KAAM,CAAAmF,SAAS,CAAG,CAAC,CAAC,CAAE;AACtB,KAAM,CAAAC,qBAAqB,CAAG,CAAC,CAAC,CAAE;AAElC;AACA,KAAM,CAAAC,aAAa,CAAGlG,eAAe,CAACgF,GAAG,CAAC,KAAO,CAAApD,GAAG,EAAK,CACvD,KAAM,CAAA4C,MAAM,CAAG,KAAM,CAAAH,oBAAoB,CAACzC,GAAG,CAAC,CAAE;AAChD,MAAO,CAAEA,GAAG,CAAE4C,MAAO,CAAC,CAAE;AAC1B,CAAC,CAAC,CAEF,KAAM,CAAA2B,OAAO,CAAG,KAAM,CAAAC,OAAO,CAACC,GAAG,CAACH,aAAa,CAAC,CAAE;AAElD;AACAC,OAAO,CAACG,OAAO,CAACC,IAAA,EAAqB,IAApB,CAAE3E,GAAG,CAAE4C,MAAO,CAAC,CAAA+B,IAAA,CAC9BP,SAAS,CAACpE,GAAG,CAAC,CAAG4C,MAAM,CAAE;AACzB,KAAM,CAAAsB,cAAc,CAAGtB,MAAM,CAAC7C,MAAM,CAAEQ,KAAK,EAAKA,KAAK,CAACsD,QAAQ,CAAC,CAACT,GAAG,CAAE7C,KAAK,EAAKA,KAAK,CAACN,IAAI,CAAC,CAAE;AAC5FoE,qBAAqB,CAACrE,GAAG,CAAC,CAAGkE,cAAc,CAAE;AAC/C,CAAC,CAAC,CAEFzF,aAAa,CAAC2F,SAAS,CAAC,CAAE;AAC1BvF,gBAAgB,CAACT,eAAe,CAAC,CAAC,CAAC,CAAC,CAAE;AACtCO,iBAAiB,CAAC0F,qBAAqB,CAAC,CAAE;AAC1ClG,OAAO,CAAC,CAAC,CAAC,CAAE;AACd,CAAE,MAAOW,KAAK,CAAE,CACdC,QAAQ,CAAC,0BAA0B,CAAGD,KAAK,CAAC6C,OAAO,CAAC,CAAE;AACxD,CAAC,OAAS,CACR1C,YAAY,CAAC,KAAK,CAAC,CAAE;AACvB,CACF,CAAC,CAED;AACA,KAAM,CAAA2F,kBAAkB,CAAG3H,WAAW,CAAE4H,CAAC,EAAK,CAC5ChG,gBAAgB,CAACgG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAE;AAClChG,QAAQ,CAAC,EAAE,CAAC,CAAE;AAChB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER;AACA,KAAM,CAAAiG,YAAY,CAAG/H,WAAW,CAAC,IAAM,CACrC8B,QAAQ,CAAC,EAAE,CAAC,CAAE;AACd,IAAK,KAAM,CAAAiB,GAAG,GAAI,CAAA5B,eAAe,CAAE,KAAA6G,eAAA,CAAE;AACnC,GAAI,CAACvG,cAAc,CAACsB,GAAG,CAAC,EAAItB,cAAc,CAACsB,GAAG,CAAC,CAAC0D,MAAM,GAAK,CAAC,CAAE,CAAE;AAC9D3E,QAAQ,yCAAAsD,MAAA,CAAyCrC,GAAG,KAAG,CAAC,CAAE;AAC1D,OAAQ;AACV,CACA,KAAM,CAAAkE,cAAc,CAAG,EAAAe,eAAA,CAAAzG,UAAU,CAACwB,GAAG,CAAC,UAAAiF,eAAA,iBAAfA,eAAA,CAAiBlF,MAAM,CAAEQ,KAAK,EAAKA,KAAK,CAACsD,QAAQ,CAAC,GAAI,EAAE,CAAE;AACjF,KAAM,CAAAqB,QAAQ,CAAGxG,cAAc,CAACsB,GAAG,CAAC,EAAI,EAAE,CAAE;AAC5C,KAAM,CAAAmF,eAAe,CAAGjB,cAAc,CAACnE,MAAM,CAAEQ,KAAK,EAAK,CAAC2E,QAAQ,CAAC/E,QAAQ,CAACI,KAAK,CAACN,IAAI,CAAC,CAAC,CAAE;AAC1F,GAAIkF,eAAe,CAACzB,MAAM,CAAG,CAAC,CAAE,CAAE;AAChC3E,QAAQ,0CAAAsD,MAAA,CACmCrC,GAAG,OAAAqC,MAAA,CAAK8C,eAAe,CAC7D/B,GAAG,CAAEI,CAAC,EAAKA,CAAC,CAACpD,KAAK,CAAC,CACnB6D,IAAI,CAAC,IAAI,CAAC,CAAG;AAClB,CAAC,CACD,OAAQ;AACV,CACF,CAEAxE,iBAAiB,CAAC,IAAI,CAAC,CACzB,CAAC,CAAE,CAACrB,eAAe,CAAEM,cAAc,CAAEF,UAAU,CAAEkB,QAAQ,CAAC,CAAC,CAAE;AAE7D;AACA,KAAM,CAAA0F,WAAW,CAAGnI,WAAW,CAAC,IAAM,CACpCyC,QAAQ,CAAC,OAAO,CAAC,CAAE;AACrB,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAAE;AAEhB;AACA,GAAIF,cAAc,CAAE,CAClB,mBACEjC,IAAA,CAACF,QAAQ,EACPgI,OAAO,CAAEA,CAAA,GAAM5F,iBAAiB,CAAC,KAAK,CAAE,CACxCmD,MAAM,CAAE,CAAC,CAAE0C,EAAE,CAAE,gBAAgB,CAAEC,IAAI,CAAE,QAAQ,CAAEC,OAAO,CAAE,cAAc,CAAEC,SAAS,CAAE,QAAS,CAAC,CAAE,CACjGrH,eAAe,CAAEA,eAAiB;AAAA,CAClCM,cAAc,CAAEA,cAAgB;AAAA,CAChCF,UAAU,CAAEA,UAAY;AAAA,CACzB,CAAC,CAEN,CAEA,mBACEf,KAAA,QAAKiI,SAAS,CAAC,mFAAmF,CAAAC,QAAA,EAAC,GAAC,CACjG3G,SAAS,eAAM;AACdzB,IAAA,QAAKmI,SAAS,CAAC,+EAA+E,CAAAC,QAAA,cAC5FpI,IAAA,QAAKmI,SAAS,CAAC,2EAA2E,CAAM,CAAC,CAC9F,CACN,cAEDjI,KAAA,QAAKiI,SAAS,CAAC,2EAA2E,CAAAC,QAAA,EAAC,GAAC,cAC1FlI,KAAA,QAAKiI,SAAS,CAAC,gDAAgD,CAAAC,QAAA,EAAC,GAAC,cAC/DpI,IAAA,OAAImI,SAAS,CAAC,kCAAkC,CAAAC,QAAA,CAAC,oBAAkB,CAAI,CAAC,cACxEpI,IAAA,WACEqI,OAAO,CAAER,WAAY,CACrBM,SAAS,CAAC,2CAA2C,CACrD,aAAW,OAAO,CAAAC,QAAA,CACnB,MAED,CAAQ,CAAC,EACN,CAAC,CAEL7G,KAAK,eAAM;AACVvB,IAAA,QAAKmI,SAAS,CAAC,uDAAuD,CAAAC,QAAA,cACpElI,KAAA,QAAKiI,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAChCpI,IAAA,QAAKmI,SAAS,CAAC,cAAc,CAACG,IAAI,CAAC,cAAc,CAACC,OAAO,CAAC,WAAW,CAAAH,QAAA,cACnEpI,IAAA,SACEwI,QAAQ,CAAC,SAAS,CAClBC,CAAC,CAAC,qHAAqH,CACvHC,QAAQ,CAAC,SAAS,CACnB,CAAC,CACC,CAAC,cACN1I,IAAA,SAAAoI,QAAA,CAAO7G,KAAK,CAAO,CAAC,EACjB,CAAC,CACH,CACN,cAEDrB,KAAA,QAAKiI,SAAS,CAAC,6BAA6B,CAAAC,QAAA,EAAC,GAAC,CAC3CzH,IAAI,GAAK,CAAC,eAAM;AACfT,KAAA,QAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,wBAAsB,CAAI,CAAC,cAEpFlI,KAAA,QAAKiI,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAC,GAAC,cACrBlI,KAAA,QAAKiI,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBpI,IAAA,UACEgI,IAAI,CAAC,MAAM,CACXW,WAAW,CAAC,mBAAmB,CAC/BnB,KAAK,CAAE7F,YAAa,CACpBiH,QAAQ,CAAGtB,CAAC,EAAK1F,eAAe,CAAC0F,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CACjDW,SAAS,CAAC,wFAAwF,CACnG,CAAC,cACFnI,IAAA,QACEmI,SAAS,CAAC,6CAA6C,CACvDG,IAAI,CAAC,MAAM,CACXO,MAAM,CAAC,cAAc,CACrBN,OAAO,CAAC,WAAW,CAAAH,QAAA,cAEnBpI,IAAA,SACE8I,aAAa,CAAC,OAAO,CACrBC,cAAc,CAAC,OAAO,CACtBC,WAAW,CAAC,GAAG,CACfP,CAAC,CAAC,6CAA6C,CAChD,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,cAENvI,KAAA,QAAKiI,SAAS,CAAC,0BAA0B,CAAAC,QAAA,EAAC,GAAC,cACzClI,KAAA,QAAKiI,SAAS,CAAC,sBAAsB,CAAAC,QAAA,EAAC,GAAC,cACrClI,KAAA,QAAKiI,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDpI,IAAA,OAAImI,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,mBAAiB,CAAI,CAAC,cAChEpI,IAAA,WACEqI,OAAO,CAAEA,CAAA,GAAM3C,cAAc,CAAC,OAAO,CAAE,CACvCyC,SAAS,CAAC,uCAAuC,CACjDc,KAAK,CAAC,SAAS,CAAAb,QAAA,cAEfpI,IAAA,QAAKmI,SAAS,CAAC,SAAS,CAACG,IAAI,CAAC,MAAM,CAACO,MAAM,CAAC,cAAc,CAACN,OAAO,CAAC,WAAW,CAAAH,QAAA,cAC5EpI,IAAA,SAAM8I,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACP,CAAC,CAAC,2BAA2B,CAAE,CAAC,CAChG,CAAC,CACA,CAAC,EACN,CAAC,cACNzI,IAAA,QAAKmI,SAAS,CAAC,0CAA0C,CAAAC,QAAA,cACvDlI,KAAA,QAAKiI,SAAS,CAAC,iBAAiB,CAACe,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAf,QAAA,eACzDpI,IAAA,CAACH,eAAe,EAAAuI,QAAA,CACbhG,gBAAgB,CACdI,MAAM,CAAEC,GAAG,EAAK,CAAC5B,eAAe,CAAC+B,QAAQ,CAACH,GAAG,CAACC,IAAI,CAAC,CAAC,CACpDmD,GAAG,CAAEpD,GAAG,eACPvC,KAAA,CAACN,MAAM,CAACwJ,GAAG,EAETC,MAAM,MACNC,QAAQ,CAAEnJ,YAAa,CACvBoJ,OAAO,CAAC,QAAQ,CAChBC,OAAO,CAAC,SAAS,CACjB/I,IAAI,CAAC,MAAM,CACXgJ,UAAU,CAAE,CAAEC,QAAQ,CAAE,IAAK,CAAE,CAC/BvB,SAAS,CAAC,yEAAyE,CAAAC,QAAA,eAEnFpI,IAAA,QAAKmI,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC1ClI,KAAA,QAAAkI,QAAA,eACEpI,IAAA,QAAKmI,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE3F,GAAG,CAACI,KAAK,CAAM,CAAC,cAC9C7C,IAAA,QAAKmI,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAE3F,GAAG,CAACC,IAAI,CAAM,CAAC,EACpD,CAAC,CACH,CAAC,cACN1C,IAAA,WACEqI,OAAO,CAAEA,CAAA,GAAM7C,qBAAqB,CAAC/C,GAAG,CAACC,IAAI,CAAE,CAC/CyF,SAAS,CAAC,uCAAuC,CAAAC,QAAA,cAEjDpI,IAAA,SAAMmI,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,CAC7B,CAAC,GApBJ3F,GAAG,CAACC,IAqBC,CACb,CAAC,CACW,CAAC,CACjBN,gBAAgB,CAAC+D,MAAM,GAAK,CAAC,eAC5BnG,IAAA,QAAKmI,SAAS,CAAC,wEAAwE,CAAAC,QAAA,CAAC,sBAExF,CAAK,CACN,EACE,CAAC,CACH,CAAC,EACH,CAAC,cAENlI,KAAA,QAAKiI,SAAS,CAAC,sBAAsB,CAAAC,QAAA,EAAC,GAAC,cACrClI,KAAA,QAAKiI,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDpI,IAAA,OAAImI,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cAC/DpI,IAAA,WACEqI,OAAO,CAAEA,CAAA,GAAM3C,cAAc,CAAC,MAAM,CAAE,CACtCyC,SAAS,CAAC,uCAAuC,CACjDc,KAAK,CAAC,YAAY,CAAAb,QAAA,cAElBpI,IAAA,QAAKmI,SAAS,CAAC,SAAS,CAACG,IAAI,CAAC,MAAM,CAACO,MAAM,CAAC,cAAc,CAACN,OAAO,CAAC,WAAW,CAAAH,QAAA,cAC5EpI,IAAA,SAAM8I,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACP,CAAC,CAAC,+BAA+B,CAAE,CAAC,CACpG,CAAC,CACA,CAAC,EACN,CAAC,cACNzI,IAAA,QAAKmI,SAAS,CAAC,qDAAqD,CAAAC,QAAA,cAClEpI,IAAA,QAAKmI,SAAS,CAAC,iBAAiB,CAACe,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAf,QAAA,cACzDpI,IAAA,CAACH,eAAe,EAAAuI,QAAA,CACbvH,eAAe,CAACsF,MAAM,CAAG,CAAC,CACzBtF,eAAe,CAACgF,GAAG,CAAE8D,OAAO,EAAK,CAC/B,KAAM,CAAAlH,GAAG,CAAG1B,QAAQ,CAACiF,IAAI,CAAE4D,CAAC,EAAKA,CAAC,CAAClH,IAAI,GAAKiH,OAAO,CAAC,CACpD,GAAI,CAAClH,GAAG,CAAE,MAAO,KAAI,CACrB,mBACEvC,KAAA,CAACN,MAAM,CAACwJ,GAAG,EAETC,MAAM,MACNC,QAAQ,CAAEnJ,YAAa,CACvBoJ,OAAO,CAAC,QAAQ,CAChBC,OAAO,CAAC,SAAS,CACjB/I,IAAI,CAAC,MAAM,CACXgJ,UAAU,CAAE,CAAEC,QAAQ,CAAE,IAAK,CAAE,CAC/BvB,SAAS,CAAC,6FAA6F,CAAAC,QAAA,eAEvGpI,IAAA,WACEqI,OAAO,CAAEA,CAAA,GAAM7C,qBAAqB,CAAC/C,GAAG,CAACC,IAAI,CAAE,CAC/CyF,SAAS,CAAC,uCAAuC,CAAAC,QAAA,cAEjDpI,IAAA,SAAMmI,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,CAC7B,CAAC,cACTpI,IAAA,QAAKmI,SAAS,CAAC,4BAA4B,CAAAC,QAAA,cACzClI,KAAA,QAAAkI,QAAA,eACEpI,IAAA,QAAKmI,SAAS,CAAC,aAAa,CAAAC,QAAA,CAAE3F,GAAG,CAACI,KAAK,CAAM,CAAC,cAC9C7C,IAAA,QAAKmI,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAE3F,GAAG,CAACC,IAAI,CAAM,CAAC,EACpD,CAAC,CACH,CAAC,GApBDD,GAAG,CAACC,IAqBC,CAAC,CAEjB,CAAC,CAAC,cAEF1C,IAAA,CAACJ,MAAM,CAACwJ,GAAG,EACTjB,SAAS,CAAC,wEAAwE,CAClFoB,OAAO,CAAE,CAAElJ,OAAO,CAAE,CAAE,CAAE,CACxBmJ,OAAO,CAAE,CAAEnJ,OAAO,CAAE,CAAE,CAAE,CACxBI,IAAI,CAAE,CAAEJ,OAAO,CAAE,CAAE,CAAE,CAAA+H,QAAA,CACtB,6BAED,CAAY,CACb,CACc,CAAC,CACf,CAAC,CACH,CAAC,EACH,CAAC,EACH,CAAC,cAENlI,KAAA,QAAKiI,SAAS,CAAC,uBAAuB,CAAAC,QAAA,EAAC,GAAC,cACtClI,KAAA,WACEmI,OAAO,CAAEzB,cAAe,CACxBiD,QAAQ,CAAEhJ,eAAe,CAACsF,MAAM,GAAK,CAAE,CACvCgC,SAAS,qCAAArD,MAAA,CACPjE,eAAe,CAACsF,MAAM,GAAK,CAAC,CACxB,8CAA8C,CAC9C,0CAA0C,sBAC3B,CAAAiC,QAAA,EACtB,MAEC,cAAApI,IAAA,QACEmI,SAAS,CAAC,qBAAqB,CAC/BG,IAAI,CAAC,MAAM,CACXO,MAAM,CAAC,cAAc,CACrBN,OAAO,CAAC,WAAW,CAAAH,QAAA,cAEnBpI,IAAA,SACE8I,aAAa,CAAC,OAAO,CACrBC,cAAc,CAAC,OAAO,CACtBC,WAAW,CAAC,GAAG,CACfP,CAAC,CAAC,cAAc,CACjB,CAAC,CACC,CAAC,EACA,CAAC,EACN,CAAC,EACH,CACN,CAEA9H,IAAI,GAAK,CAAC,eAAM;AACfT,KAAA,QAAAkI,QAAA,eACEpI,IAAA,OAAImI,SAAS,CAAC,0CAA0C,CAAAC,QAAA,CAAC,uBAAqB,CAAI,CAAC,cAEnFlI,KAAA,QAAKiI,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAC,GAAC,cACrBpI,IAAA,UAAOmI,SAAS,CAAC,8CAA8C,CAAAC,QAAA,CAAC,gBAEhE,CAAO,CAAC,cACRpI,IAAA,WACEwH,KAAK,CAAEnG,aAAc,CACrBuH,QAAQ,CAAEvB,kBAAmB,CAC7Bc,SAAS,CAAC,kFAAkF,CAAAC,QAAA,CAE3FvH,eAAe,CAACgF,GAAG,CAAEpD,GAAG,eACvBzC,IAAA,WAAkBwH,KAAK,CAAE/E,GAAI,CAAA2F,QAAA,CAC1B3F,GAAG,EADOA,GAEL,CACT,CAAC,CACI,CAAC,EACN,CAAC,cAENvC,KAAA,QAAKiI,SAAS,CAAC,MAAM,CAAAC,QAAA,EAAC,GAAC,cACrBlI,KAAA,QAAKiI,SAAS,CAAC,UAAU,CAAAC,QAAA,eACvBpI,IAAA,UACEgI,IAAI,CAAC,MAAM,CACXW,WAAW,CAAC,kBAAkB,CAC9BnB,KAAK,CAAE3F,WAAY,CACnB+G,QAAQ,CAAGtB,CAAC,EAAKxF,cAAc,CAACwF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE,CAChDW,SAAS,CAAC,wFAAwF,CACnG,CAAC,cACFnI,IAAA,QACEmI,SAAS,CAAC,6CAA6C,CACvDG,IAAI,CAAC,MAAM,CACXO,MAAM,CAAC,cAAc,CACrBN,OAAO,CAAC,WAAW,CAAAH,QAAA,cAEnBpI,IAAA,SACE8I,aAAa,CAAC,OAAO,CACrBC,cAAc,CAAC,OAAO,CACtBC,WAAW,CAAC,GAAG,CACfP,CAAC,CAAC,6CAA6C,CAChD,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,cAENvI,KAAA,QAAKiI,SAAS,CAAC,0BAA0B,CAAAC,QAAA,EAAC,GAAC,cACzClI,KAAA,QAAKiI,SAAS,CAAC,sBAAsB,CAAAC,QAAA,EAAC,GAAC,cACrClI,KAAA,QAAKiI,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDpI,IAAA,OAAImI,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,kBAAgB,CAAI,CAAC,cAC/DpI,IAAA,WACEqI,OAAO,CAAEA,CAAA,GAAM9B,aAAa,CAAC,OAAO,CAAE,CACtC4B,SAAS,CAAC,uCAAuC,CACjDc,KAAK,CAAC,SAAS,CAAAb,QAAA,cAEfpI,IAAA,QAAKmI,SAAS,CAAC,SAAS,CAACG,IAAI,CAAC,MAAM,CAACO,MAAM,CAAC,cAAc,CAACN,OAAO,CAAC,WAAW,CAAAH,QAAA,cAC5EpI,IAAA,SAAM8I,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACP,CAAC,CAAC,2BAA2B,CAAE,CAAC,CAChG,CAAC,CACA,CAAC,EACN,CAAC,cACNzI,IAAA,QAAKmI,SAAS,CAAC,0CAA0C,CAAAC,QAAA,cACvDpI,IAAA,QAAKmI,SAAS,CAAC,iBAAiB,CAACe,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAf,QAAA,CACxDtF,cAAc,CAACqD,MAAM,CAAG,CAAC,cACxBnG,IAAA,CAACH,eAAe,EAAAuI,QAAA,CACbtF,cAAc,CACZN,MAAM,CACJQ,KAAK,EAAK,CAAC,CAAC7B,cAAc,CAACE,aAAa,CAAC,EAAI,EAAE,EAAEuB,QAAQ,CAACI,KAAK,CAACN,IAAI,CACvE,CAAC,CACAmD,GAAG,CAAE7C,KAAK,eACT9C,KAAA,CAACN,MAAM,CAACwJ,GAAG,EAETC,MAAM,MACNC,QAAQ,CAAEnJ,YAAa,CACvBoJ,OAAO,CAAC,QAAQ,CAChBC,OAAO,CAAC,SAAS,CACjB/I,IAAI,CAAC,MAAM,CACXgJ,UAAU,CAAE,CAAEC,QAAQ,CAAE,IAAK,CAAE,CAC/BvB,SAAS,CAAC,gEAAgE,CAAAC,QAAA,eAE1EpI,IAAA,QAAKmI,SAAS,CAAC,6BAA6B,CAAAC,QAAA,cAC1ClI,KAAA,QAAAkI,QAAA,eACElI,KAAA,QAAKiI,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzBpF,KAAK,CAACH,KAAK,CACXG,KAAK,CAACsD,QAAQ,eACbtG,IAAA,SAAMmI,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,GAAC,CAAM,CAC5C,EACE,CAAC,cACNpI,IAAA,QAAKmI,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAEpF,KAAK,CAACN,IAAI,CAAM,CAAC,CACxDM,KAAK,CAACgF,IAAI,eACT9H,KAAA,QAAKiI,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EAAC,QACpC,CAACpF,KAAK,CAACgF,IAAI,EACd,CACN,EACE,CAAC,CACH,CAAC,cACNhI,IAAA,WACEqI,OAAO,CAAEA,CAAA,GAAMvC,oBAAoB,CAAC9C,KAAK,CAACN,IAAI,CAAE,CAChDyF,SAAS,CAAC,uCAAuC,CAAAC,QAAA,cAEjDpI,IAAA,SAAMmI,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,CAC7B,CAAC,GA9BJpF,KAAK,CAACN,IA+BD,CACb,CAAC,CACW,CAAC,cAElB1C,IAAA,QAAKmI,SAAS,CAAC,wEAAwE,CAAAC,QAAA,CACpFvG,WAAW,CAAG,0BAA0B,CAAG,qBAAqB,CAC9D,CACN,CACE,CAAC,CACH,CAAC,EACH,CAAC,cAEN3B,KAAA,QAAKiI,SAAS,CAAC,sBAAsB,CAAAC,QAAA,EAAC,GAAC,cACrClI,KAAA,QAAKiI,SAAS,CAAC,wCAAwC,CAAAC,QAAA,eACrDpI,IAAA,OAAImI,SAAS,CAAC,2BAA2B,CAAAC,QAAA,CAAC,iBAAe,CAAI,CAAC,cAC9DpI,IAAA,WACEqI,OAAO,CAAEA,CAAA,GAAM9B,aAAa,CAAC,MAAM,CAAE,CACrC4B,SAAS,CAAC,uCAAuC,CACjDc,KAAK,CAAC,YAAY,CAAAb,QAAA,cAElBpI,IAAA,QAAKmI,SAAS,CAAC,SAAS,CAACG,IAAI,CAAC,MAAM,CAACO,MAAM,CAAC,cAAc,CAACN,OAAO,CAAC,WAAW,CAAAH,QAAA,cAC5EpI,IAAA,SAAM8I,aAAa,CAAC,OAAO,CAACC,cAAc,CAAC,OAAO,CAACC,WAAW,CAAC,GAAG,CAACP,CAAC,CAAC,+BAA+B,CAAE,CAAC,CACpG,CAAC,CACA,CAAC,EACN,CAAC,cACNzI,IAAA,QAAKmI,SAAS,CAAC,qDAAqD,CAAAC,QAAA,cAClEpI,IAAA,QAAKmI,SAAS,CAAC,iBAAiB,CAACe,KAAK,CAAE,CAAEC,MAAM,CAAE,MAAO,CAAE,CAAAf,QAAA,CACxD,CAACjH,cAAc,CAACE,aAAa,CAAC,EAAI,EAAE,EAAE8E,MAAM,CAAG,CAAC,cAC/CnG,IAAA,CAACH,eAAe,EAAAuI,QAAA,CACb,CAACjH,cAAc,CAACE,aAAa,CAAC,EAAI,EAAE,EAAEwE,GAAG,CAAEE,SAAS,EAAK,KAAA+D,sBAAA,CACxD,KAAM,CAAA9G,KAAK,EAAA8G,sBAAA,CAAG7I,UAAU,CAACI,aAAa,CAAC,UAAAyI,sBAAA,iBAAzBA,sBAAA,CAA2B9D,IAAI,CAC1CC,CAAC,EAAKA,CAAC,CAACvD,IAAI,GAAKqD,SACpB,CAAC,CACD,GAAI,CAAC/C,KAAK,CAAE,MAAO,KAAI,CACvB,mBACE9C,KAAA,CAACN,MAAM,CAACwJ,GAAG,EAETC,MAAM,MACNC,QAAQ,CAAEnJ,YAAa,CACvBoJ,OAAO,CAAC,QAAQ,CAChBC,OAAO,CAAC,SAAS,CACjB/I,IAAI,CAAC,MAAM,CACXgJ,UAAU,CAAE,CAAEC,QAAQ,CAAE,IAAK,CAAE,CAC/BvB,SAAS,CAAC,iFAAiF,CAAAC,QAAA,eAE3FpI,IAAA,WACEqI,OAAO,CAAEA,CAAA,GAAMvC,oBAAoB,CAAC9C,KAAK,CAACN,IAAI,CAAE,CAChDyF,SAAS,CAAC,uCAAuC,CAAAC,QAAA,cAEjDpI,IAAA,SAAMmI,SAAS,CAAC,UAAU,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,CAC7B,CAAC,cACTpI,IAAA,QAAKmI,SAAS,CAAC,4BAA4B,CAAAC,QAAA,cACzClI,KAAA,QAAAkI,QAAA,eACElI,KAAA,QAAKiI,SAAS,CAAC,aAAa,CAAAC,QAAA,EACzBpF,KAAK,CAACH,KAAK,CACXG,KAAK,CAACsD,QAAQ,eACbtG,IAAA,SAAMmI,SAAS,CAAC,mBAAmB,CAAAC,QAAA,CAAC,GAAC,CAAM,CAC5C,EACE,CAAC,cACNpI,IAAA,QAAKmI,SAAS,CAAC,uBAAuB,CAAAC,QAAA,CAAEpF,KAAK,CAACN,IAAI,CAAM,CAAC,CACxDM,KAAK,CAACgF,IAAI,eACT9H,KAAA,QAAKiI,SAAS,CAAC,4BAA4B,CAAAC,QAAA,EAAC,QACpC,CAACpF,KAAK,CAACgF,IAAI,EACd,CACN,EACE,CAAC,CACH,CAAC,GA9BDhF,KAAK,CAACN,IA+BD,CAAC,CAEjB,CAAC,CAAC,CACa,CAAC,cAElB1C,IAAA,QAAKmI,SAAS,CAAC,wEAAwE,CAAAC,QAAA,CAAC,4BAExF,CAAK,CACN,CACE,CAAC,CACH,CAAC,EACH,CAAC,EACH,CAAC,cAENlI,KAAA,QAAKiI,SAAS,CAAC,2BAA2B,CAAAC,QAAA,EAAC,GAAC,cAC1ClI,KAAA,WACEmI,OAAO,CAAEA,CAAA,GAAM,CACb7G,QAAQ,CAAC,EAAE,CAAC,CACZZ,OAAO,CAAC,CAAC,CAAC,CACZ,CAAE,CACFuH,SAAS,CAAC,gGAAgG,CAAAC,QAAA,eAE1GpI,IAAA,QACEmI,SAAS,CAAC,qBAAqB,CAC/BG,IAAI,CAAC,MAAM,CACXO,MAAM,CAAC,cAAc,CACrBN,OAAO,CAAC,WAAW,CAAAH,QAAA,cAEnBpI,IAAA,SACE8I,aAAa,CAAC,OAAO,CACrBC,cAAc,CAAC,OAAO,CACtBC,WAAW,CAAC,GAAG,CACfP,CAAC,CAAC,iBAAiB,CACpB,CAAC,CACC,CAAC,OAER,EAAQ,CAAC,cACTvI,KAAA,WACEmI,OAAO,CAAEZ,YAAa,CACtBU,SAAS,CAAC,+FAA+F,CAAAC,QAAA,EAC1G,QAEC,cAAApI,IAAA,QACEmI,SAAS,CAAC,qBAAqB,CAC/BG,IAAI,CAAC,MAAM,CACXO,MAAM,CAAC,cAAc,CACrBN,OAAO,CAAC,WAAW,CAAAH,QAAA,cAEnBpI,IAAA,SACE8I,aAAa,CAAC,OAAO,CACrBC,cAAc,CAAC,OAAO,CACtBC,WAAW,CAAC,GAAG,CACfP,CAAC,CAAC,gBAAgB,CACnB,CAAC,CACC,CAAC,EACA,CAAC,EACN,CAAC,EACH,CACN,EACE,CAAC,cAENvI,KAAA,QAAKiI,SAAS,CAAC,kCAAkC,CAAAC,QAAA,EAAC,GAAC,cACjDlI,KAAA,QAAKiI,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BpI,IAAA,QACEmI,SAAS,yBAAArD,MAAA,CAA0BnE,IAAI,GAAK,CAAC,CAAG,aAAa,CAAG,aAAa,CAAG,CAC5E,CAAC,cACPX,IAAA,QACEmI,SAAS,yBAAArD,MAAA,CAA0BnE,IAAI,GAAK,CAAC,CAAG,aAAa,CAAG,aAAa,CAAG,CAC5E,CAAC,EACJ,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,2BAAerB,KAAK,CAACyK,IAAI,CAACrJ,gBAAgB,CAAC,CAAE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}