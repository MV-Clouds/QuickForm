{"ast":null,"code":"// src/utils/crypto.js\nimport CryptoJS from'crypto-js';const secret='process.env.REACT_APP_ENCRYPTION_SECRET';const iv=CryptoJS.enc.Hex.parse('process.env.REACT_APP_ENCRYPTION_IV');function encrypt(text){return CryptoJS.AES.encrypt(text,secret,{iv}).toString();}function decrypt(encrypted){const bytes=CryptoJS.AES.decrypt(encrypted,secret,{iv});return bytes.toString(CryptoJS.enc.Utf8);}export{encrypt,decrypt};","map":{"version":3,"names":["CryptoJS","secret","iv","enc","Hex","parse","encrypt","text","AES","toString","decrypt","encrypted","bytes","Utf8"],"sources":["C:/Users/MVclouds/Desktop/QuickForm/Merged Mapping QF/QuickForm/QuickForm-Romit-Kajal-Merge/quick-form-app/src/components/form-builder-with-versions/crypto.jsx"],"sourcesContent":["// src/utils/crypto.js\r\nimport CryptoJS from 'crypto-js';\r\n\r\nconst secret = 'process.env.REACT_APP_ENCRYPTION_SECRET' ;\r\nconst iv = CryptoJS.enc.Hex.parse('process.env.REACT_APP_ENCRYPTION_IV');\r\n\r\nfunction encrypt(text) {\r\n  return CryptoJS.AES.encrypt(text, secret, { iv }).toString();\r\n}\r\n\r\nfunction decrypt(encrypted) {\r\n  const bytes = CryptoJS.AES.decrypt(encrypted, secret, { iv });\r\n  return bytes.toString(CryptoJS.enc.Utf8);\r\n}\r\n\r\nexport { encrypt, decrypt };"],"mappings":"AAAA;AACA,MAAO,CAAAA,QAAQ,KAAM,WAAW,CAEhC,KAAM,CAAAC,MAAM,CAAG,yCAAyC,CACxD,KAAM,CAAAC,EAAE,CAAGF,QAAQ,CAACG,GAAG,CAACC,GAAG,CAACC,KAAK,CAAC,qCAAqC,CAAC,CAExE,QAAS,CAAAC,OAAOA,CAACC,IAAI,CAAE,CACrB,MAAO,CAAAP,QAAQ,CAACQ,GAAG,CAACF,OAAO,CAACC,IAAI,CAAEN,MAAM,CAAE,CAAEC,EAAG,CAAC,CAAC,CAACO,QAAQ,CAAC,CAAC,CAC9D,CAEA,QAAS,CAAAC,OAAOA,CAACC,SAAS,CAAE,CAC1B,KAAM,CAAAC,KAAK,CAAGZ,QAAQ,CAACQ,GAAG,CAACE,OAAO,CAACC,SAAS,CAAEV,MAAM,CAAE,CAAEC,EAAG,CAAC,CAAC,CAC7D,MAAO,CAAAU,KAAK,CAACH,QAAQ,CAACT,QAAQ,CAACG,GAAG,CAACU,IAAI,CAAC,CAC1C,CAEA,OAASP,OAAO,CAAEI,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}