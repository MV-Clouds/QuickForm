{"ast":null,"code":"import React,{useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function FormCalculationWidget(_ref){let{selectedField,onUpdateField,fields}=_ref;const[formula,setFormula]=useState((selectedField===null||selectedField===void 0?void 0:selectedField.formula)||'');const[fieldReferences,setFieldReferences]=useState((selectedField===null||selectedField===void 0?void 0:selectedField.fieldReferences)||[]);const[showFields,setShowFields]=useState(false);const[showFunctions,setShowFunctions]=useState(false);const calculableFields=(fields===null||fields===void 0?void 0:fields.filter(field=>['number','price'].includes(field.type)&&field.id!==selectedField.id))||[];const functions=['SUM','AVERAGE','MIN','MAX',// Basic\n'SQRT','POWER','ABS','ROUND',// Advanced\n'IF','AND','OR',// Conditional\n'TODAY','DATEDIFF','NOW'// Date/Time\n];// Convert formula to display labels instead of IDs\nconst displayFormula=()=>{let display=formula;fields.forEach(field=>{const regex=new RegExp(\"\\\\{\".concat(field.id,\"\\\\}\"),'g');const label=field.label||field.type;display=display.replace(regex,\"{\".concat(label,\"}\"));});return display;};// Convert display formula back to raw IDs when saving or editing\nconst convertToRawFormula=displayedFormula=>{let raw=displayedFormula;fields.forEach(field=>{const regex=new RegExp(\"\\\\{\".concat(field.label||field.type,\"\\\\}\"),'g');raw=raw.replace(regex,\"{\".concat(field.id,\"}\"));});return raw;};const handleFormulaChange=value=>{const rawFormula=convertToRawFormula(value);setFormula(rawFormula);};const appendToFormula=value=>{setFormula(prev=>prev+value);};const handleFieldSelect=fieldId=>{if(!fieldReferences.includes(fieldId)){const newReferences=[...fieldReferences,fieldId];setFieldReferences(newReferences);onUpdateField(selectedField.id,{fieldReferences:newReferences});}appendToFormula(\"{\".concat(fieldId,\"}\"));setShowFields(false);};const handleFunctionSelect=func=>{appendToFormula(\"\".concat(func,\"(\"));setShowFunctions(false);};const handleBackspace=()=>{setFormula(prev=>prev.slice(0,-1));};const handleClearFormula=()=>{setFormula('');setFieldReferences([]);onUpdateField(selectedField.id,{formula:'',fieldReferences:[]});};const handleSaveFormula=()=>{onUpdateField(selectedField.id,{formula,fieldReferences});};return/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-medium text-gray-700\",children:\"Form Calculation Widget\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500\",children:\"Make simple or complex calculations and use them on your forms\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Calculation Area\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:displayFormula(),onChange:e=>handleFormulaChange(e.target.value),className:\"w-full p-2 border rounded-lg bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500\",placeholder:\"e.g., {Price} * {Quantity}\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 relative\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowFields(!showFields),className:\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 mb-2\",children:\"ADD FIELD\"}),showFields&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute z-10 bg-white border rounded-lg shadow-lg p-2 w-full max-h-40 overflow-y-auto\",children:calculableFields.length>0?calculableFields.map(field=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleFieldSelect(field.id),className:\"block w-full text-left px-2 py-1 text-gray-700 hover:bg-gray-100\",children:field.label||field.type},field.id)):/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-500 px-2 py-1\",children:\"No calculable fields available (add number or price fields).\"})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium text-gray-700 mb-1\",children:\"Calculator Keypad\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-4 gap-2\",children:[['7','8','9','/'].map(char=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>appendToFormula(char),className:\"p-2 rounded \".concat(char==='/'?'bg-blue-500 text-white hover:bg-blue-600':'bg-gray-200 text-gray-700 hover:bg-gray-300'),children:char},char)),['4','5','6','*'].map(char=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>appendToFormula(char),className:\"p-2 rounded \".concat(char==='*'?'bg-blue-500 text-white hover:bg-blue-600':'bg-gray-200 text-gray-700 hover:bg-gray-300'),children:char},char)),['1','2','3','-'].map(char=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>appendToFormula(char),className:\"p-2 rounded \".concat(char==='-'?'bg-blue-500 text-white hover:bg-blue-600':'bg-gray-200 text-gray-700 hover:bg-gray-300'),children:char},char)),['0','.','(',')'].map(char=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>appendToFormula(char),className:\"p-2 rounded \".concat(char==='('||char===')'||char==='.'?'bg-blue-500 text-white hover:bg-blue-600':'bg-gray-200 text-gray-700 hover:bg-gray-300'),children:char},char)),/*#__PURE__*/_jsx(\"button\",{onClick:()=>appendToFormula('+'),className:\"p-2 rounded bg-blue-500 text-white hover:bg-blue-600\",children:\"+\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBackspace,className:\"p-2 rounded bg-red-500 text-white hover:bg-red-600\",children:\"\\u2190\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowFunctions(!showFunctions),className:\"p-2 w-full rounded bg-purple-500 text-white hover:bg-purple-600\",children:\"f(x)\"}),showFunctions&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute z-10 bg-white border rounded-lg shadow-lg p-2 w-full max-h-40 overflow-y-auto\",children:functions.map(func=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleFunctionSelect(func),className:\"block w-full text-left px-2 py-1 text-gray-700 hover:bg-gray-100\",children:func},func))})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>alert('Options not implemented yet'),className:\"text-blue-600 hover:underline text-sm\",children:\"Options\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveFormula,className:\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\",children:\"SAVE\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleClearFormula,className:\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\",children:\"Clear\"})]})]})]});}export default FormCalculationWidget;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","FormCalculationWidget","_ref","selectedField","onUpdateField","fields","formula","setFormula","fieldReferences","setFieldReferences","showFields","setShowFields","showFunctions","setShowFunctions","calculableFields","filter","field","includes","type","id","functions","displayFormula","display","forEach","regex","RegExp","concat","label","replace","convertToRawFormula","displayedFormula","raw","handleFormulaChange","value","rawFormula","appendToFormula","prev","handleFieldSelect","fieldId","newReferences","handleFunctionSelect","func","handleBackspace","slice","handleClearFormula","handleSaveFormula","className","children","onChange","e","target","placeholder","onClick","length","map","char","alert"],"sources":["C:/Users/MVclouds/Desktop/QuickForm/Merged Mapping QF/QuickForm/QuickForm-Romit-Kajal-Merge/quick-form-app/src/components/form-builder-with-versions/FormCalculationWidget.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction FormCalculationWidget({ selectedField, onUpdateField, fields }) {\r\n  const [formula, setFormula] = useState(selectedField?.formula || '');\r\n  const [fieldReferences, setFieldReferences] = useState(selectedField?.fieldReferences || []);\r\n  const [showFields, setShowFields] = useState(false);\r\n  const [showFunctions, setShowFunctions] = useState(false);\r\n\r\n  const calculableFields = fields?.filter((field) =>\r\n    ['number', 'price'].includes(field.type) && field.id !== selectedField.id\r\n  ) || [];\r\n\r\n  const functions = [\r\n    'SUM', 'AVERAGE', 'MIN', 'MAX', // Basic\r\n    'SQRT', 'POWER', 'ABS', 'ROUND', // Advanced\r\n    'IF', 'AND', 'OR', // Conditional\r\n    'TODAY', 'DATEDIFF', 'NOW', // Date/Time\r\n  ];\r\n\r\n  // Convert formula to display labels instead of IDs\r\n  const displayFormula = () => {\r\n    let display = formula;\r\n    fields.forEach((field) => {\r\n      const regex = new RegExp(`\\\\{${field.id}\\\\}`, 'g');\r\n      const label = field.label || field.type;\r\n      display = display.replace(regex, `{${label}}`);\r\n    });\r\n    return display;\r\n  };\r\n\r\n  // Convert display formula back to raw IDs when saving or editing\r\n  const convertToRawFormula = (displayedFormula) => {\r\n    let raw = displayedFormula;\r\n    fields.forEach((field) => {\r\n      const regex = new RegExp(`\\\\{${field.label || field.type}\\\\}`, 'g');\r\n      raw = raw.replace(regex, `{${field.id}}`);\r\n    });\r\n    return raw;\r\n  };\r\n\r\n  const handleFormulaChange = (value) => {\r\n    const rawFormula = convertToRawFormula(value);\r\n    setFormula(rawFormula);\r\n  };\r\n\r\n  const appendToFormula = (value) => {\r\n    setFormula((prev) => prev + value);\r\n  };\r\n\r\n  const handleFieldSelect = (fieldId) => {\r\n    if (!fieldReferences.includes(fieldId)) {\r\n      const newReferences = [...fieldReferences, fieldId];\r\n      setFieldReferences(newReferences);\r\n      onUpdateField(selectedField.id, { fieldReferences: newReferences });\r\n    }\r\n    appendToFormula(`{${fieldId}}`);\r\n    setShowFields(false);\r\n  };\r\n\r\n  const handleFunctionSelect = (func) => {\r\n    appendToFormula(`${func}(`);\r\n    setShowFunctions(false);\r\n  };\r\n\r\n  const handleBackspace = () => {\r\n    setFormula((prev) => prev.slice(0, -1));\r\n  };\r\n\r\n  const handleClearFormula = () => {\r\n    setFormula('');\r\n    setFieldReferences([]);\r\n    onUpdateField(selectedField.id, { formula: '', fieldReferences: [] });\r\n  };\r\n\r\n  const handleSaveFormula = () => {\r\n    onUpdateField(selectedField.id, { formula, fieldReferences });\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-4\">\r\n      {/* Header Section */}\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"text-lg font-medium text-gray-700\">Form Calculation Widget</h3>\r\n        <p className=\"text-sm text-gray-500\">Make simple or complex calculations and use them on your forms</p>\r\n      </div>\r\n\r\n      {/* Main Workspace */}\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Calculation Area</label>\r\n        <input\r\n          type=\"text\"\r\n          value={displayFormula()}\r\n          onChange={(e) => handleFormulaChange(e.target.value)}\r\n          className=\"w-full p-2 border rounded-lg bg-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n          placeholder=\"e.g., {Price} * {Quantity}\"\r\n        />\r\n      </div>\r\n      <div className=\"mb-4 relative\">\r\n        <button\r\n          onClick={() => setShowFields(!showFields)}\r\n          className=\"px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600 mb-2\"\r\n        >\r\n          ADD FIELD\r\n        </button>\r\n        {showFields && (\r\n          <div className=\"absolute z-10 bg-white border rounded-lg shadow-lg p-2 w-full max-h-40 overflow-y-auto\">\r\n            {calculableFields.length > 0 ? (\r\n              calculableFields.map((field) => (\r\n                <button\r\n                  key={field.id}\r\n                  onClick={() => handleFieldSelect(field.id)}\r\n                  className=\"block w-full text-left px-2 py-1 text-gray-700 hover:bg-gray-100\"\r\n                >\r\n                  {field.label || field.type}\r\n                </button>\r\n              ))\r\n            ) : (\r\n              <p className=\"text-sm text-gray-500 px-2 py-1\">No calculable fields available (add number or price fields).</p>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"mb-4\">\r\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">Calculator Keypad</label>\r\n        <div className=\"grid grid-cols-4 gap-2\">\r\n          {['7', '8', '9', '/'].map((char) => (\r\n            <button\r\n              key={char}\r\n              onClick={() => appendToFormula(char)}\r\n              className={`p-2 rounded ${\r\n                char === '/' ? 'bg-blue-500 text-white hover:bg-blue-600' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n              }`}\r\n            >\r\n              {char}\r\n            </button>\r\n          ))}\r\n          {['4', '5', '6', '*'].map((char) => (\r\n            <button\r\n              key={char}\r\n              onClick={() => appendToFormula(char)}\r\n              className={`p-2 rounded ${\r\n                char === '*' ? 'bg-blue-500 text-white hover:bg-blue-600' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n              }`}\r\n            >\r\n              {char}\r\n            </button>\r\n          ))}\r\n          {['1', '2', '3', '-'].map((char) => (\r\n            <button\r\n              key={char}\r\n              onClick={() => appendToFormula(char)}\r\n              className={`p-2 rounded ${\r\n                char === '-' ? 'bg-blue-500 text-white hover:bg-blue-600' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n              }`}\r\n            >\r\n              {char}\r\n            </button>\r\n          ))}\r\n          {['0', '.', '(', ')'].map((char) => (\r\n            <button\r\n              key={char}\r\n              onClick={() => appendToFormula(char)}\r\n              className={`p-2 rounded ${\r\n                char === '(' || char === ')' || char === '.' ? 'bg-blue-500 text-white hover:bg-blue-600' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n              }`}\r\n            >\r\n              {char}\r\n            </button>\r\n          ))}\r\n          <button\r\n            onClick={() => appendToFormula('+')}\r\n            className=\"p-2 rounded bg-blue-500 text-white hover:bg-blue-600\"\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            onClick={handleBackspace}\r\n            className=\"p-2 rounded bg-red-500 text-white hover:bg-red-600\"\r\n          >\r\n            ←\r\n          </button>\r\n          <div className=\"relative\">\r\n            <button\r\n              onClick={() => setShowFunctions(!showFunctions)}\r\n              className=\"p-2 w-full rounded bg-purple-500 text-white hover:bg-purple-600\"\r\n            >\r\n              f(x)\r\n            </button>\r\n            {showFunctions && (\r\n              <div className=\"absolute z-10 bg-white border rounded-lg shadow-lg p-2 w-full max-h-40 overflow-y-auto\">\r\n                {functions.map((func) => (\r\n                  <button\r\n                    key={func}\r\n                    onClick={() => handleFunctionSelect(func)}\r\n                    className=\"block w-full text-left px-2 py-1 text-gray-700 hover:bg-gray-100\"\r\n                  >\r\n                    {func}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Footer Controls */}\r\n      <div className=\"flex justify-between items-center\">\r\n        <button\r\n          onClick={() => alert('Options not implemented yet')}\r\n          className=\"text-blue-600 hover:underline text-sm\"\r\n        >\r\n          Options\r\n        </button>\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={handleSaveFormula}\r\n            className=\"px-4 py-2 bg-green-500 text-white rounded hover:bg-green-600\"\r\n          >\r\n            SAVE\r\n          </button>\r\n          <button\r\n            onClick={handleClearFormula}\r\n            className=\"px-4 py-2 bg-gray-300 text-gray-700 rounded hover:bg-gray-400\"\r\n          >\r\n            Clear\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormCalculationWidget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}