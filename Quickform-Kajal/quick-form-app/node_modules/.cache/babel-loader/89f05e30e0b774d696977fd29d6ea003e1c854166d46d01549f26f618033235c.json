{"ast":null,"code":"// src/utils/getCountries.js\nimport{getCountries,getCountryCallingCode}from'libphonenumber-js';export const getCountryList=()=>{return getCountries().map(code=>{const countryName=new Intl.DisplayNames(['en'],{type:'region'}).of(code);const dialCode=\"+\".concat(getCountryCallingCode(code));return{code,name:countryName||code,// Fallback to code if name is undefined\ndialCode};}).filter(country=>country.name)// Exclude invalid entries\n.sort((a,b)=>a.name.localeCompare(b.name));};","map":{"version":3,"names":["getCountries","getCountryCallingCode","getCountryList","map","code","countryName","Intl","DisplayNames","type","of","dialCode","concat","name","filter","country","sort","a","b","localeCompare"],"sources":["C:/Users/MVclouds/Desktop/QuickForm/Merged Mapping QF/QuickForm/QuickForm-Romit-Kajal-Merge/quick-form-app/src/components/form-builder-with-versions/getCountries.jsx"],"sourcesContent":["// src/utils/getCountries.js\r\nimport { getCountries, getCountryCallingCode } from 'libphonenumber-js';\r\n\r\nexport const getCountryList = () => {\r\n  return getCountries()\r\n    .map((code) => {\r\n      const countryName = new Intl.DisplayNames(['en'], { type: 'region' }).of(code);\r\n      const dialCode = `+${getCountryCallingCode(code)}`;\r\n      return {\r\n        code,\r\n        name: countryName || code, // Fallback to code if name is undefined\r\n        dialCode,\r\n      };\r\n    })\r\n    .filter((country) => country.name) // Exclude invalid entries\r\n    .sort((a, b) => a.name.localeCompare(b.name));\r\n};"],"mappings":"AAAA;AACA,OAASA,YAAY,CAAEC,qBAAqB,KAAQ,mBAAmB,CAEvE,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,MAAO,CAAAF,YAAY,CAAC,CAAC,CAClBG,GAAG,CAAEC,IAAI,EAAK,CACb,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAAC,IAAI,CAACC,YAAY,CAAC,CAAC,IAAI,CAAC,CAAE,CAAEC,IAAI,CAAE,QAAS,CAAC,CAAC,CAACC,EAAE,CAACL,IAAI,CAAC,CAC9E,KAAM,CAAAM,QAAQ,KAAAC,MAAA,CAAOV,qBAAqB,CAACG,IAAI,CAAC,CAAE,CAClD,MAAO,CACLA,IAAI,CACJQ,IAAI,CAAEP,WAAW,EAAID,IAAI,CAAE;AAC3BM,QACF,CAAC,CACH,CAAC,CAAC,CACDG,MAAM,CAAEC,OAAO,EAAKA,OAAO,CAACF,IAAI,CAAE;AAAA,CAClCG,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAKD,CAAC,CAACJ,IAAI,CAACM,aAAa,CAACD,CAAC,CAACL,IAAI,CAAC,CAAC,CACjD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}